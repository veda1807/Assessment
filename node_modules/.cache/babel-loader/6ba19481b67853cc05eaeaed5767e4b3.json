{"ast":null,"code":"var React = require(\"react\");\n\nvar iterall = require(\"iterall\");\n/**\n * Use the props `of` to provide the list and `as` to provide an element for\n * each item in the list. The `of` prop accepts Arrays, Array-likes,\n * and Iterables.\n *\n *   <ul>\n *     <For of={myList} as={item =>\n *       <li>{item}</li>\n *     }/>\n *   </ul>\n *\n * Or provide a \"render prop\" function as a child.\n *\n *   <ul>\n *     <For of={myList}>\n *       {item =>\n *         <li>{item}</li>\n *       }\n *     </For>\n *   </ul>\n *\n * Access additional information about each iteration by destructuring the\n * second argument:\n *\n * - `index`: A number from 0 to the length of the list\n * - `length`: The length of the list\n * - `key`: The key for this item in the list, same as `index` for Arrays\n *          but string Object properties for `in` loops\n * - `isFirst`: True for the first iteration\n * - `isLast`: True for the last iteration\n *\n *   <ul>\n *     <For of={myList} as={(item, { isLast }) =>\n *       <li>{isLast && \"and \"}{item}</li>\n *     }/>\n *   </ul>\n *\n * You can also optionally provide a fallback rendering with the `ifEmpty` prop:\n *\n *   <ul>\n *     <For\n *       of={myList}\n *       as={item => <li>{item}</li>\n *       ifEmpty={<b>No more items!</b>}\n *     />\n *   </ul>\n *\n * *For in Loops*\n *\n * Use the prop `in` to provide an Object instead of an Array or Iterable.\n *\n *   <ul>\n *     <For in={myObj} as={(item, {key}) =>\n *       <li>{key}: {item}</li>\n *     }/>\n *   </ul>\n\n * *React Keys*\n *\n * Provide `key` on each child to ensure correct behavior if the list may be\n * reordered over time. If you don't provide `key`, the `key` of each\n * iteration will be used by default.\n *\n *   <ul>\n *     <For of={myList} as={item =>\n *       <li key={item.id}>{item.label}</li>\n *     }/>\n *   </ul>\n *\n */\n\n\nfunction For(props) {\n  // Get the mapping callback\n  var mapper = props.children || props.as;\n\n  if (typeof mapper !== \"function\" || (props.hasOwnProperty(\"as\") ^ props.hasOwnProperty(\"children\")) === 0) {\n    throw new TypeError(\"<For> expects either a render-prop child or a Function `as` prop.\");\n  }\n\n  var hasIn = props.hasOwnProperty(\"in\");\n\n  if ((props.hasOwnProperty(\"of\") ^ hasIn) === 0) {\n    throw new TypeError(\"<For> expects either a Collection `of` or Object `in` prop.\");\n  }\n\n  if (hasIn) {\n    // Get the object\n    var obj = props.in; // Accept null / falsey as nothing to loop.\n\n    if (!obj) {\n      return renderEmpty(props);\n    }\n\n    if (iterall.isCollection(obj) || typeof obj !== \"object\") {\n      throw new TypeError(\"<For in={}> expects a non-collection Object. \" + \"Perhaps you meant to use <For of={}> with a Collection?\");\n    } // Get the set of keys, rendering as empty if there are no keys.\n\n\n    var keys = Object.keys(obj);\n    var length = keys.length;\n\n    if (length === 0) {\n      return renderEmpty(props);\n    } // Map each object property key into a React child.\n\n\n    var mapped = [];\n\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      mapped.push(mapIteration(mapper, obj[key], i, length, key));\n    }\n\n    return mapped;\n  } // Get the list\n\n\n  var list = props.of; // Accept null / falsey as nothing to loop.\n\n  if (!list) {\n    return renderEmpty(props);\n  } // Convert non-Array collections to an Array.\n\n\n  if (!Array.isArray(list)) {\n    if (!iterall.isCollection(list)) {\n      throw new TypeError(\"<For of={}> expects an Array, Array-like, or Iterable collection. \" + \"Perhaps you meant to use <For in={}> with an Object?\");\n    }\n\n    var array = [];\n    iterall.forEach(list, function (item) {\n      array.push(item);\n    });\n    list = array;\n  } // Get the length of the list, rendering as empty if 0.\n\n\n  var length = list.length;\n\n  if (length === 0) {\n    return renderEmpty(props);\n  } // Map each list item into a React child.\n\n\n  var mapped = [];\n\n  for (var i = 0; i < length; i++) {\n    mapped.push(mapIteration(mapper, list[i], i, length, i));\n  }\n\n  return mapped;\n}\n\nfunction mapIteration(mapper, item, index, length, key) {\n  // Map this item into a React child node.\n  // Produce additional info only if the mapper expects it.\n  var result = mapper.length === 1 ? mapper(item) : mapper(item, {\n    index: index,\n    length: length,\n    key: key,\n    isFirst: index === 0,\n    isLast: index === length - 1\n  }); // If the response is an element without a key property, add it automatically\n  // by using the iteration key.\n\n  if (React.isValidElement(result) && !result.props.hasOwnProperty(\"key\")) {\n    return React.cloneElement(result, {\n      key: String(key)\n    });\n  }\n\n  return result;\n}\n\nfunction renderEmpty(props) {\n  // If the collection was non-existent or empty, render the empty condition\n  // if it exists, otherwise render null.\n  if (!props.hasOwnProperty(\"ifEmpty\")) {\n    return null;\n  }\n\n  var ifEmpty = props.ifEmpty;\n  return typeof ifEmpty === \"function\" ? ifEmpty() : ifEmpty;\n} // Export loops\n\n\nObject.defineProperties(exports, {\n  For: {\n    enumerable: true,\n    value: For\n  },\n  __esModule: {\n    value: true\n  }\n});","map":{"version":3,"sources":["D:/MSIT/Practicum - iLMS/AssessmentsSystem/node_modules/react-loops/react-loops.js"],"names":["React","require","iterall","For","props","mapper","children","as","hasOwnProperty","TypeError","hasIn","obj","in","renderEmpty","isCollection","keys","Object","length","mapped","i","key","push","mapIteration","list","of","Array","isArray","array","forEach","item","index","result","isFirst","isLast","isValidElement","cloneElement","String","ifEmpty","defineProperties","exports","enumerable","value","__esModule"],"mappings":"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","sourcesContent":["var React = require(\"react\");\nvar iterall = require(\"iterall\");\n\n/**\n * Use the props `of` to provide the list and `as` to provide an element for\n * each item in the list. The `of` prop accepts Arrays, Array-likes,\n * and Iterables.\n *\n *   <ul>\n *     <For of={myList} as={item =>\n *       <li>{item}</li>\n *     }/>\n *   </ul>\n *\n * Or provide a \"render prop\" function as a child.\n *\n *   <ul>\n *     <For of={myList}>\n *       {item =>\n *         <li>{item}</li>\n *       }\n *     </For>\n *   </ul>\n *\n * Access additional information about each iteration by destructuring the\n * second argument:\n *\n * - `index`: A number from 0 to the length of the list\n * - `length`: The length of the list\n * - `key`: The key for this item in the list, same as `index` for Arrays\n *          but string Object properties for `in` loops\n * - `isFirst`: True for the first iteration\n * - `isLast`: True for the last iteration\n *\n *   <ul>\n *     <For of={myList} as={(item, { isLast }) =>\n *       <li>{isLast && \"and \"}{item}</li>\n *     }/>\n *   </ul>\n *\n * You can also optionally provide a fallback rendering with the `ifEmpty` prop:\n *\n *   <ul>\n *     <For\n *       of={myList}\n *       as={item => <li>{item}</li>\n *       ifEmpty={<b>No more items!</b>}\n *     />\n *   </ul>\n *\n * *For in Loops*\n *\n * Use the prop `in` to provide an Object instead of an Array or Iterable.\n *\n *   <ul>\n *     <For in={myObj} as={(item, {key}) =>\n *       <li>{key}: {item}</li>\n *     }/>\n *   </ul>\n\n * *React Keys*\n *\n * Provide `key` on each child to ensure correct behavior if the list may be\n * reordered over time. If you don't provide `key`, the `key` of each\n * iteration will be used by default.\n *\n *   <ul>\n *     <For of={myList} as={item =>\n *       <li key={item.id}>{item.label}</li>\n *     }/>\n *   </ul>\n *\n */\nfunction For(props) {\n  // Get the mapping callback\n  var mapper = props.children || props.as;\n  if (\n    typeof mapper !== \"function\" ||\n    (props.hasOwnProperty(\"as\") ^ props.hasOwnProperty(\"children\")) === 0\n  ) {\n    throw new TypeError(\n      \"<For> expects either a render-prop child or a Function `as` prop.\"\n    );\n  }\n\n  var hasIn = props.hasOwnProperty(\"in\");\n  if ((props.hasOwnProperty(\"of\") ^ hasIn) === 0) {\n    throw new TypeError(\n      \"<For> expects either a Collection `of` or Object `in` prop.\"\n    );\n  }\n\n  if (hasIn) {\n    // Get the object\n    var obj = props.in;\n\n    // Accept null / falsey as nothing to loop.\n    if (!obj) {\n      return renderEmpty(props);\n    }\n\n    if (iterall.isCollection(obj) || typeof obj !== \"object\") {\n      throw new TypeError(\n        \"<For in={}> expects a non-collection Object. \" +\n          \"Perhaps you meant to use <For of={}> with a Collection?\"\n      );\n    }\n\n    // Get the set of keys, rendering as empty if there are no keys.\n    var keys = Object.keys(obj);\n    var length = keys.length;\n    if (length === 0) {\n      return renderEmpty(props);\n    }\n\n    // Map each object property key into a React child.\n    var mapped = [];\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      mapped.push(mapIteration(mapper, obj[key], i, length, key));\n    }\n    return mapped;\n  }\n\n  // Get the list\n  var list = props.of;\n\n  // Accept null / falsey as nothing to loop.\n  if (!list) {\n    return renderEmpty(props);\n  }\n\n  // Convert non-Array collections to an Array.\n  if (!Array.isArray(list)) {\n    if (!iterall.isCollection(list)) {\n      throw new TypeError(\n        \"<For of={}> expects an Array, Array-like, or Iterable collection. \" +\n          \"Perhaps you meant to use <For in={}> with an Object?\"\n      );\n    }\n    var array = [];\n    iterall.forEach(list, function(item) {\n      array.push(item);\n    });\n    list = array;\n  }\n\n  // Get the length of the list, rendering as empty if 0.\n  var length = list.length;\n  if (length === 0) {\n    return renderEmpty(props);\n  }\n\n  // Map each list item into a React child.\n  var mapped = [];\n  for (var i = 0; i < length; i++) {\n    mapped.push(mapIteration(mapper, list[i], i, length, i));\n  }\n  return mapped;\n}\n\nfunction mapIteration(mapper, item, index, length, key) {\n  // Map this item into a React child node.\n  // Produce additional info only if the mapper expects it.\n  var result =\n    mapper.length === 1\n      ? mapper(item)\n      : mapper(item, {\n          index: index,\n          length: length,\n          key: key,\n          isFirst: index === 0,\n          isLast: index === length - 1\n        });\n  // If the response is an element without a key property, add it automatically\n  // by using the iteration key.\n  if (React.isValidElement(result) && !result.props.hasOwnProperty(\"key\")) {\n    return React.cloneElement(result, { key: String(key) });\n  }\n  return result;\n}\n\nfunction renderEmpty(props) {\n  // If the collection was non-existent or empty, render the empty condition\n  // if it exists, otherwise render null.\n  if (!props.hasOwnProperty(\"ifEmpty\")) {\n    return null;\n  }\n\n  var ifEmpty = props.ifEmpty;\n  return typeof ifEmpty === \"function\" ? ifEmpty() : ifEmpty;\n}\n\n// Export loops\nObject.defineProperties(exports, {\n  For: { enumerable: true, value: For },\n  __esModule: { value: true }\n});\n"]},"metadata":{},"sourceType":"script"}
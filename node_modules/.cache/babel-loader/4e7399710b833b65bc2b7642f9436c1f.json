{"ast":null,"code":"var _jsxFileName = \"D:\\\\MSIT\\\\Practicum - iLMS\\\\editor-codemirror6\\\\src\\\\components\\\\CodeQues.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Editor from './Editor';\nimport \"./CodeQues.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CodeQues() {\n  _s();\n\n  const [view, setView] = useState(null);\n  const [result, setResult] = useState(\"\");\n  const codeRef = React.useRef < HTMLTextAreaElement > null;\n\n  const evaluateCode = () => {\n    if (codeRef.current === null) return;\n    const code = codeRef.current.value;\n    if (code.length === 0) return;\n\n    try {\n      setResult(eval(code));\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coding-assessment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [\"question\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sample input\",\n          children: \"sample input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sample output\",\n          children: \"sample output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor\",\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            setView: setView,\n            language: \"python\",\n            content: \"print('hello')\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn run\",\n            onClick: code,\n            children: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn reset\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-window\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            title: \"output\",\n            frameBorder: \"1px\",\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CodeQues, \"vnsh5XwEPPOA82uai8wKYAkw0o0=\");\n\n_c = CodeQues;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeQues\");","map":{"version":3,"sources":["D:/MSIT/Practicum - iLMS/editor-codemirror6/src/components/CodeQues.js"],"names":["React","useState","Editor","CodeQues","view","setView","result","setResult","codeRef","useRef","HTMLTextAreaElement","evaluateCode","current","code","value","length","eval","e","console","warn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,gBAAP;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMO,OAAO,GAAGR,KAAK,CAACS,MAAN,GAAaC,mBAAb,GAAkC,IAAlD;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAIH,OAAO,CAACI,OAAR,KAAoB,IAAxB,EAA8B;AAC9B,UAAMC,IAAI,GAAGL,OAAO,CAACI,OAAR,CAAgBE,KAA7B;AACA,QAAID,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;;AACvB,QAAI;AACAR,MAAAA,SAAS,CAACS,IAAI,CAACH,IAAD,CAAL,CAAT;AACH,KAFD,CAEE,OAAOI,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb;AACH;AACJ,GATD;;AAWA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAG,mBAAjB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAG,UAAjB;AAAA,4CAEI;AAAK,UAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAK,UAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAG,MAAjB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAG,QAAjB;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,OAAO,EAAIZ,OADf;AAEI,YAAA,QAAQ,EAAG,QAFf;AAGI,YAAA,OAAO,EAAG;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAK,UAAA,SAAS,EAAG,MAAjB;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAG,SAApB;AAA8B,YAAA,OAAO,EAAEQ,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAG,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,SAAS,EAAG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eAcI;AAAK,UAAA,SAAS,EAAG,eAAjB;AAAA,iCACI;AACI,YAAA,KAAK,EAAG,QADZ;AAEI,YAAA,WAAW,EAAG,KAFlB;AAGI,YAAA,KAAK,EAAG;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GAxDuBV,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\r\nimport Editor from './Editor'\r\nimport \"./CodeQues.css\"\r\n\r\nexport default function CodeQues() {\r\n\r\n    const [view, setView] = useState(null);\r\n    const [result, setResult] = useState(\"\");\r\n    const codeRef = React.useRef<HTMLTextAreaElement>(null);\r\n\r\n\r\n    const evaluateCode = () => {\r\n        if (codeRef.current === null) return;\r\n        const code = codeRef.current.value;\r\n        if (code.length === 0) return;\r\n        try {\r\n            setResult(eval(code));\r\n        } catch (e) {\r\n            console.warn(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"coding-assessment\">\r\n                <div className = \"question\">\r\n                    question\r\n                    <div className = \"sample input\">\r\n                        sample input\r\n                    </div>\r\n                    <div className = \"sample output\">\r\n                        sample output\r\n                    </div>\r\n                </div>\r\n                <div className = \"code\">\r\n                    <div className = \"editor\">\r\n                        <Editor \r\n                            setView = {setView}\r\n                            language = \"python\"\r\n                            content = \"print('hello')\"\r\n                        />\r\n                    </div>\r\n                    <div className = \"btns\">\r\n                        <button className = \"btn run\" onClick={code}>Run</button>\r\n                        <button className = \"btn submit\">Submit</button>\r\n                        <button className = \"btn reset\">Reset</button>\r\n                    </div>\r\n\r\n                    <div className = \"output-window\">\r\n                        <iframe\r\n                            title = \"output\"\r\n                            frameBorder = \"1px\"\r\n                            width = \"100%\"\r\n                        />\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { EditorView, Decoration, ViewPlugin, logException, WidgetType } from '@codemirror/view';\nimport { StateEffect, StateField } from '@codemirror/state';\nimport { hoverTooltip } from '@codemirror/tooltip';\nimport { showPanel, getPanel } from '@codemirror/panel';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n  constructor(from, to, diagnostic) {\n    this.from = from;\n    this.to = to;\n    this.diagnostic = diagnostic;\n  }\n\n}\n\nclass LintState {\n  constructor(diagnostics, panel, selected) {\n    this.diagnostics = diagnostics;\n    this.panel = panel;\n    this.selected = selected;\n  }\n\n  static init(diagnostics, panel) {\n    let ranges = Decoration.set(diagnostics.map(d => {\n      return d.from < d.to ? Decoration.mark({\n        attributes: {\n          class: \"cm-lintRange cm-lintRange-\" + d.severity\n        },\n        diagnostic: d\n      }).range(d.from, d.to) : Decoration.widget({\n        widget: new DiagnosticWidget(d),\n        diagnostic: d\n      }).range(d.from);\n    }));\n    return new LintState(ranges, panel, findDiagnostic(ranges));\n  }\n\n}\n\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n  let found = null;\n  diagnostics.between(after, 1e9, (from, to, {\n    spec\n  }) => {\n    if (diagnostic && spec.diagnostic != diagnostic) return;\n    found = new SelectedDiagnostic(from, to, spec.diagnostic);\n    return false;\n  });\n  return found;\n}\n\nfunction maybeEnableLint(state, effects, diagnostics) {\n  return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of([diagnostics ? lintState.init(() => LintState.init(diagnostics, null)) : lintState, EditorView.decorations.compute([lintState], state => {\n    let {\n      selected,\n      panel\n    } = state.field(lintState);\n    return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([activeMark.range(selected.from, selected.to)]);\n  }), hoverTooltip(lintTooltip), baseTheme]));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics.\n*/\n\n\nfunction setDiagnostics(state, diagnostics) {\n  return {\n    effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)], diagnostics)\n  };\n}\n\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n  create() {\n    return new LintState(Decoration.none, null, null);\n  },\n\n  update(value, tr) {\n    if (tr.docChanged) {\n      let mapped = value.diagnostics.map(tr.changes),\n          selected = null;\n\n      if (value.selected) {\n        let selPos = tr.changes.mapPos(value.selected.from, 1);\n        selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n      }\n\n      value = new LintState(mapped, value.panel, selected);\n    }\n\n    for (let effect of tr.effects) {\n      if (effect.is(setDiagnosticsEffect)) {\n        value = LintState.init(effect.value, value.panel);\n      } else if (effect.is(togglePanel)) {\n        value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n      } else if (effect.is(movePanelSelection)) {\n        value = new LintState(value.diagnostics, value.panel, effect.value);\n      }\n    }\n\n    return value;\n  },\n\n  provide: f => [showPanel.from(f, val => val.panel), EditorView.decorations.from(f, s => s.diagnostics)]\n});\nconst activeMark = /*@__PURE__*/Decoration.mark({\n  class: \"cm-lintRange cm-lintRange-active\"\n});\n\nfunction lintTooltip(view, pos, side) {\n  let {\n    diagnostics\n  } = view.state.field(lintState);\n  let found = [],\n      stackStart = 2e8,\n      stackEnd = 0;\n  diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, {\n    spec\n  }) => {\n    if (pos >= from && pos <= to && (from == to || (pos > from || side > 0) && (pos < to || side < 0))) {\n      found.push(spec.diagnostic);\n      stackStart = Math.min(from, stackStart);\n      stackEnd = Math.max(to, stackEnd);\n    }\n  });\n  if (!found.length) return null;\n  return {\n    pos: stackStart,\n    end: stackEnd,\n    above: view.state.doc.lineAt(stackStart).to < stackEnd,\n\n    create() {\n      return {\n        dom: elt(\"ul\", {\n          class: \"cm-tooltip-lint\"\n        }, found.map(d => renderDiagnostic(view, d, false)))\n      };\n    }\n\n  };\n}\n/**\nCommand to open and focus the lint panel.\n*/\n\n\nconst openLintPanel = view => {\n  let field = view.state.field(lintState, false);\n  if (!field || !field.panel) view.dispatch({\n    effects: maybeEnableLint(view.state, [togglePanel.of(true)])\n  });\n  let panel = getPanel(view, LintPanel.open);\n  if (panel) panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n  return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\n\n\nconst closeLintPanel = view => {\n  let field = view.state.field(lintState, false);\n  if (!field || !field.panel) return false;\n  view.dispatch({\n    effects: togglePanel.of(false)\n  });\n  return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\n\n\nconst nextDiagnostic = view => {\n  let field = view.state.field(lintState, false);\n  if (!field) return false;\n  let sel = view.state.selection.main,\n      next = field.diagnostics.iter(sel.to + 1);\n\n  if (!next.value) {\n    next = field.diagnostics.iter(0);\n    if (!next.value || next.from == sel.from && next.to == sel.to) return false;\n  }\n\n  view.dispatch({\n    selection: {\n      anchor: next.from,\n      head: next.to\n    },\n    scrollIntoView: true\n  });\n  return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\n\n\nconst lintKeymap = [{\n  key: \"Mod-Shift-m\",\n  run: openLintPanel\n}, {\n  key: \"F8\",\n  run: nextDiagnostic\n}];\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed).\n*/\n\nfunction linter(source, config = {}) {\n  var _a;\n\n  let delay = (_a = config.delay) !== null && _a !== void 0 ? _a : 750;\n  return ViewPlugin.fromClass(class {\n    constructor(view) {\n      this.view = view;\n      this.lintTime = Date.now() + delay;\n      this.set = true;\n      this.run = this.run.bind(this);\n      setTimeout(this.run, delay);\n    }\n\n    run() {\n      let now = Date.now();\n\n      if (now < this.lintTime - 10) {\n        setTimeout(this.run, this.lintTime - now);\n      } else {\n        this.set = false;\n        let {\n          state\n        } = this.view;\n        Promise.resolve(source(this.view)).then(annotations => {\n          var _a, _b;\n\n          if (this.view.state.doc == state.doc && (annotations.length || ((_b = (_a = this.view.state.field(lintState, false)) === null || _a === void 0 ? void 0 : _a.diagnostics) === null || _b === void 0 ? void 0 : _b.size))) this.view.dispatch(setDiagnostics(this.view.state, annotations));\n        }, error => {\n          logException(this.view.state, error);\n        });\n      }\n    }\n\n    update(update) {\n      if (update.docChanged) {\n        this.lintTime = Date.now() + delay;\n\n        if (!this.set) {\n          this.set = true;\n          setTimeout(this.run, delay);\n        }\n      }\n    }\n\n  });\n}\n\nfunction assignKeys(actions) {\n  let assigned = [];\n  if (actions) actions: for (let {\n    name\n  } of actions) {\n    for (let i = 0; i < name.length; i++) {\n      let ch = name[i];\n\n      if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n        assigned.push(ch);\n        continue actions;\n      }\n    }\n\n    assigned.push(\"\");\n  }\n  return assigned;\n}\n\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n  var _a;\n\n  let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n  return elt(\"li\", {\n    class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity\n  }, elt(\"span\", {\n    class: \"cm-diagnosticText\"\n  }, diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n    let click = e => {\n      e.preventDefault();\n      let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n      if (found) action.apply(view, found.from, found.to);\n    };\n\n    let {\n      name\n    } = action,\n        keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n    let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex), elt(\"u\", name.slice(keyIndex, keyIndex + 1)), name.slice(keyIndex + 1)];\n    return elt(\"button\", {\n      class: \"cm-diagnosticAction\",\n      onclick: click,\n      onmousedown: click,\n      \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n    }, nameElt);\n  }), diagnostic.source && elt(\"div\", {\n    class: \"cm-diagnosticSource\"\n  }, diagnostic.source));\n}\n\nclass DiagnosticWidget extends WidgetType {\n  constructor(diagnostic) {\n    super();\n    this.diagnostic = diagnostic;\n  }\n\n  eq(other) {\n    return other.diagnostic == this.diagnostic;\n  }\n\n  toDOM() {\n    return elt(\"span\", {\n      class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity\n    });\n  }\n\n}\n\nclass PanelItem {\n  constructor(view, diagnostic) {\n    this.diagnostic = diagnostic;\n    this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n    this.dom = renderDiagnostic(view, diagnostic, true);\n    this.dom.id = this.id;\n    this.dom.setAttribute(\"role\", \"option\");\n  }\n\n}\n\nclass LintPanel {\n  constructor(view) {\n    this.view = view;\n    this.items = [];\n\n    let onkeydown = event => {\n      if (event.keyCode == 27) {\n        // Escape\n        closeLintPanel(this.view);\n        this.view.focus();\n      } else if (event.keyCode == 38 || event.keyCode == 33) {\n        // ArrowUp, PageUp\n        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n      } else if (event.keyCode == 40 || event.keyCode == 34) {\n        // ArrowDown, PageDown\n        this.moveSelection((this.selectedIndex + 1) % this.items.length);\n      } else if (event.keyCode == 36) {\n        // Home\n        this.moveSelection(0);\n      } else if (event.keyCode == 35) {\n        // End\n        this.moveSelection(this.items.length - 1);\n      } else if (event.keyCode == 13) {\n        // Enter\n        this.view.focus();\n      } else if (event.keyCode >= 65 && event.keyCode <= 90 && this.items.length) {\n        // A-Z\n        let {\n          diagnostic\n        } = this.items[this.selectedIndex],\n            keys = assignKeys(diagnostic.actions);\n\n        for (let i = 0; i < keys.length; i++) if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n          let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n          if (found) diagnostic.actions[i].apply(view, found.from, found.to);\n        }\n      } else {\n        return;\n      }\n\n      event.preventDefault();\n    };\n\n    let onclick = event => {\n      for (let i = 0; i < this.items.length; i++) {\n        if (this.items[i].dom.contains(event.target)) this.moveSelection(i);\n      }\n    };\n\n    this.list = elt(\"ul\", {\n      tabIndex: 0,\n      role: \"listbox\",\n      \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n      onkeydown,\n      onclick\n    });\n    this.dom = elt(\"div\", {\n      class: \"cm-panel-lint\"\n    }, this.list, elt(\"button\", {\n      name: \"close\",\n      \"aria-label\": this.view.state.phrase(\"close\"),\n      onclick: () => closeLintPanel(this.view)\n    }, \"×\"));\n    this.update();\n  }\n\n  get selectedIndex() {\n    let selected = this.view.state.field(lintState).selected;\n    if (!selected) return -1;\n\n    for (let i = 0; i < this.items.length; i++) if (this.items[i].diagnostic == selected.diagnostic) return i;\n\n    return -1;\n  }\n\n  update() {\n    let {\n      diagnostics,\n      selected\n    } = this.view.state.field(lintState);\n    let i = 0,\n        needsSync = false,\n        newSelectedItem = null;\n    diagnostics.between(0, this.view.state.doc.length, (_start, _end, {\n      spec\n    }) => {\n      let found = -1,\n          item;\n\n      for (let j = i; j < this.items.length; j++) if (this.items[j].diagnostic == spec.diagnostic) {\n        found = j;\n        break;\n      }\n\n      if (found < 0) {\n        item = new PanelItem(this.view, spec.diagnostic);\n        this.items.splice(i, 0, item);\n        needsSync = true;\n      } else {\n        item = this.items[found];\n\n        if (found > i) {\n          this.items.splice(i, found - i);\n          needsSync = true;\n        }\n      }\n\n      if (selected && item.diagnostic == selected.diagnostic) {\n        if (!item.dom.hasAttribute(\"aria-selected\")) {\n          item.dom.setAttribute(\"aria-selected\", \"true\");\n          newSelectedItem = item;\n        }\n      } else if (item.dom.hasAttribute(\"aria-selected\")) {\n        item.dom.removeAttribute(\"aria-selected\");\n      }\n\n      i++;\n    });\n\n    while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n      needsSync = true;\n      this.items.pop();\n    }\n\n    if (this.items.length == 0) {\n      this.items.push(new PanelItem(this.view, {\n        from: -1,\n        to: -1,\n        severity: \"info\",\n        message: this.view.state.phrase(\"No diagnostics\")\n      }));\n      needsSync = true;\n    }\n\n    if (newSelectedItem) {\n      this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n      this.view.requestMeasure({\n        key: this,\n        read: () => ({\n          sel: newSelectedItem.dom.getBoundingClientRect(),\n          panel: this.list.getBoundingClientRect()\n        }),\n        write: ({\n          sel,\n          panel\n        }) => {\n          if (sel.top < panel.top) this.list.scrollTop -= panel.top - sel.top;else if (sel.bottom > panel.bottom) this.list.scrollTop += sel.bottom - panel.bottom;\n        }\n      });\n    } else if (!this.items.length) {\n      this.list.removeAttribute(\"aria-activedescendant\");\n    }\n\n    if (needsSync) this.sync();\n  }\n\n  sync() {\n    let domPos = this.list.firstChild;\n\n    function rm() {\n      let prev = domPos;\n      domPos = prev.nextSibling;\n      prev.remove();\n    }\n\n    for (let item of this.items) {\n      if (item.dom.parentNode == this.list) {\n        while (domPos != item.dom) rm();\n\n        domPos = item.dom.nextSibling;\n      } else {\n        this.list.insertBefore(item.dom, domPos);\n      }\n    }\n\n    while (domPos) rm();\n  }\n\n  moveSelection(selectedIndex) {\n    if (this.items.length == 0) return;\n    let field = this.view.state.field(lintState);\n    let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n    if (!selection) return;\n    this.view.dispatch({\n      selection: {\n        anchor: selection.from,\n        head: selection.to\n      },\n      scrollIntoView: true,\n      effects: movePanelSelection.of(selection)\n    });\n  }\n\n  static open(view) {\n    return new LintPanel(view);\n  }\n\n}\n\nfunction underline(color) {\n  if (typeof btoa != \"function\") return \"none\";\n  let svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"3\">\n    <path d=\"m0 3 l2 -2 l1 0 l2 2 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>\n  </svg>`;\n  return `url('data:image/svg+xml;base64,${btoa(svg)}')`;\n}\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-diagnostic\": {\n    padding: \"3px 6px 3px 8px\",\n    marginLeft: \"-1px\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\"\n  },\n  \".cm-diagnostic-error\": {\n    borderLeft: \"5px solid #d11\"\n  },\n  \".cm-diagnostic-warning\": {\n    borderLeft: \"5px solid orange\"\n  },\n  \".cm-diagnostic-info\": {\n    borderLeft: \"5px solid #999\"\n  },\n  \".cm-diagnosticAction\": {\n    font: \"inherit\",\n    border: \"none\",\n    padding: \"2px 4px\",\n    backgroundColor: \"#444\",\n    color: \"white\",\n    borderRadius: \"3px\",\n    marginLeft: \"8px\"\n  },\n  \".cm-diagnosticSource\": {\n    fontSize: \"70%\",\n    opacity: .7\n  },\n  \".cm-lintRange\": {\n    backgroundPosition: \"left bottom\",\n    backgroundRepeat: \"repeat-x\"\n  },\n  \".cm-lintRange-error\": {\n    backgroundImage: /*@__PURE__*/underline(\"#d11\")\n  },\n  \".cm-lintRange-warning\": {\n    backgroundImage: /*@__PURE__*/underline(\"orange\")\n  },\n  \".cm-lintRange-info\": {\n    backgroundImage: /*@__PURE__*/underline(\"#999\")\n  },\n  \".cm-lintRange-active\": {\n    backgroundColor: \"#ffdd9980\"\n  },\n  \".cm-lintPoint\": {\n    position: \"relative\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: 0,\n      left: \"-2px\",\n      borderLeft: \"3px solid transparent\",\n      borderRight: \"3px solid transparent\",\n      borderBottom: \"4px solid #d11\"\n    }\n  },\n  \".cm-lintPoint-warning\": {\n    \"&:after\": {\n      borderBottomColor: \"orange\"\n    }\n  },\n  \".cm-lintPoint-info\": {\n    \"&:after\": {\n      borderBottomColor: \"#999\"\n    }\n  },\n  \".cm-panel.cm-panel-lint\": {\n    position: \"relative\",\n    \"& ul\": {\n      maxHeight: \"100px\",\n      overflowY: \"auto\",\n      \"& [aria-selected]\": {\n        backgroundColor: \"#ddd\",\n        \"& u\": {\n          textDecoration: \"underline\"\n        }\n      },\n      \"&:focus [aria-selected]\": {\n        background_fallback: \"#bdf\",\n        backgroundColor: \"Highlight\",\n        color_fallback: \"white\",\n        color: \"HighlightText\"\n      },\n      \"& u\": {\n        textDecoration: \"none\"\n      },\n      padding: 0,\n      margin: 0\n    },\n    \"& [name=close]\": {\n      position: \"absolute\",\n      top: \"0\",\n      right: \"2px\",\n      background: \"inherit\",\n      border: \"none\",\n      font: \"inherit\",\n      padding: 0,\n      margin: 0\n    }\n  }\n});\nexport { closeLintPanel, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics };","map":{"version":3,"sources":["D:/MSIT/Practicum - iLMS/AssessmentsSystem/node_modules/@codemirror/lint/dist/index.js"],"names":["EditorView","Decoration","ViewPlugin","logException","WidgetType","StateEffect","StateField","hoverTooltip","showPanel","getPanel","elt","SelectedDiagnostic","constructor","from","to","diagnostic","LintState","diagnostics","panel","selected","init","ranges","set","map","d","mark","attributes","class","severity","range","widget","DiagnosticWidget","findDiagnostic","after","found","between","spec","maybeEnableLint","state","effects","field","lintState","concat","appendConfig","of","decorations","compute","none","activeMark","lintTooltip","baseTheme","setDiagnostics","setDiagnosticsEffect","define","togglePanel","movePanelSelection","create","update","value","tr","docChanged","mapped","changes","selPos","mapPos","effect","is","LintPanel","open","provide","f","val","s","view","pos","side","stackStart","stackEnd","push","Math","min","max","length","end","above","doc","lineAt","dom","renderDiagnostic","openLintPanel","dispatch","querySelector","focus","closeLintPanel","nextDiagnostic","sel","selection","main","next","iter","anchor","head","scrollIntoView","lintKeymap","key","run","linter","source","config","_a","delay","fromClass","lintTime","Date","now","bind","setTimeout","Promise","resolve","then","annotations","_b","size","error","assignKeys","actions","assigned","name","i","ch","test","some","c","toLowerCase","inPanel","keys","message","action","click","e","preventDefault","apply","keyIndex","indexOf","nameElt","slice","onclick","onmousedown","eq","other","toDOM","PanelItem","id","floor","random","toString","setAttribute","items","onkeydown","event","keyCode","moveSelection","selectedIndex","toUpperCase","charCodeAt","contains","target","list","tabIndex","role","phrase","needsSync","newSelectedItem","_start","_end","item","j","splice","hasAttribute","removeAttribute","pop","requestMeasure","read","getBoundingClientRect","write","top","scrollTop","bottom","sync","domPos","firstChild","rm","prev","nextSibling","remove","parentNode","insertBefore","underline","color","btoa","svg","padding","marginLeft","display","whiteSpace","borderLeft","font","border","backgroundColor","borderRadius","fontSize","opacity","backgroundPosition","backgroundRepeat","backgroundImage","position","content","left","borderRight","borderBottom","borderBottomColor","maxHeight","overflowY","textDecoration","background_fallback","color_fallback","margin","right","background"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,YAA7C,EAA2DC,UAA3D,QAA6E,kBAA7E;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,mBAAxC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,mBAApC;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,kBAAN,CAAyB;AACrBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,EAAP,EAAWC,UAAX,EAAuB;AAC9B,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACH;;AALoB;;AAOzB,MAAMC,SAAN,CAAgB;AACZJ,EAAAA,WAAW,CAACK,WAAD,EAAcC,KAAd,EAAqBC,QAArB,EAA+B;AACtC,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AACU,SAAJC,IAAI,CAACH,WAAD,EAAcC,KAAd,EAAqB;AAC5B,QAAIG,MAAM,GAAGpB,UAAU,CAACqB,GAAX,CAAeL,WAAW,CAACM,GAAZ,CAAiBC,CAAD,IAAO;AAC/C,aAAOA,CAAC,CAACX,IAAF,GAASW,CAAC,CAACV,EAAX,GACDb,UAAU,CAACwB,IAAX,CAAgB;AACdC,QAAAA,UAAU,EAAE;AAAEC,UAAAA,KAAK,EAAE,+BAA+BH,CAAC,CAACI;AAA1C,SADE;AAEdb,QAAAA,UAAU,EAAES;AAFE,OAAhB,EAGCK,KAHD,CAGOL,CAAC,CAACX,IAHT,EAGeW,CAAC,CAACV,EAHjB,CADC,GAKDb,UAAU,CAAC6B,MAAX,CAAkB;AAChBA,QAAAA,MAAM,EAAE,IAAIC,gBAAJ,CAAqBP,CAArB,CADQ;AAEhBT,QAAAA,UAAU,EAAES;AAFI,OAAlB,EAGCK,KAHD,CAGOL,CAAC,CAACX,IAHT,CALN;AASH,KAV2B,CAAf,CAAb;AAWA,WAAO,IAAIG,SAAJ,CAAcK,MAAd,EAAsBH,KAAtB,EAA6Bc,cAAc,CAACX,MAAD,CAA3C,CAAP;AACH;;AAnBW;;AAqBhB,SAASW,cAAT,CAAwBf,WAAxB,EAAqCF,UAAU,GAAG,IAAlD,EAAwDkB,KAAK,GAAG,CAAhE,EAAmE;AAC/D,MAAIC,KAAK,GAAG,IAAZ;AACAjB,EAAAA,WAAW,CAACkB,OAAZ,CAAoBF,KAApB,EAA2B,GAA3B,EAAgC,CAACpB,IAAD,EAAOC,EAAP,EAAW;AAAEsB,IAAAA;AAAF,GAAX,KAAwB;AACpD,QAAIrB,UAAU,IAAIqB,IAAI,CAACrB,UAAL,IAAmBA,UAArC,EACI;AACJmB,IAAAA,KAAK,GAAG,IAAIvB,kBAAJ,CAAuBE,IAAvB,EAA6BC,EAA7B,EAAiCsB,IAAI,CAACrB,UAAtC,CAAR;AACA,WAAO,KAAP;AACH,GALD;AAMA,SAAOmB,KAAP;AACH;;AACD,SAASG,eAAT,CAAyBC,KAAzB,EAAgCC,OAAhC,EAAyCtB,WAAzC,EAAsD;AAClD,SAAOqB,KAAK,CAACE,KAAN,CAAYC,SAAZ,EAAuB,KAAvB,IAAgCF,OAAhC,GAA0CA,OAAO,CAACG,MAAR,CAAerC,WAAW,CAACsC,YAAZ,CAAyBC,EAAzB,CAA4B,CACxF3B,WAAW,GAAGwB,SAAS,CAACrB,IAAV,CAAe,MAAMJ,SAAS,CAACI,IAAV,CAAeH,WAAf,EAA4B,IAA5B,CAArB,CAAH,GAA6DwB,SADgB,EAExFzC,UAAU,CAAC6C,WAAX,CAAuBC,OAAvB,CAA+B,CAACL,SAAD,CAA/B,EAA4CH,KAAK,IAAI;AACjD,QAAI;AAAEnB,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAAsBoB,KAAK,CAACE,KAAN,CAAYC,SAAZ,CAA1B;AACA,WAAO,CAACtB,QAAD,IAAa,CAACD,KAAd,IAAuBC,QAAQ,CAACN,IAAT,IAAiBM,QAAQ,CAACL,EAAjD,GAAsDb,UAAU,CAAC8C,IAAjE,GAAwE9C,UAAU,CAACqB,GAAX,CAAe,CAC1F0B,UAAU,CAACnB,KAAX,CAAiBV,QAAQ,CAACN,IAA1B,EAAgCM,QAAQ,CAACL,EAAzC,CAD0F,CAAf,CAA/E;AAGH,GALD,CAFwF,EAQxFP,YAAY,CAAC0C,WAAD,CAR4E,EASxFC,SATwF,CAA5B,CAAf,CAAjD;AAWH;AACD;AACA;AACA;AACA;;;AACA,SAASC,cAAT,CAAwBb,KAAxB,EAA+BrB,WAA/B,EAA4C;AACxC,SAAO;AACHsB,IAAAA,OAAO,EAAEF,eAAe,CAACC,KAAD,EAAQ,CAACc,oBAAoB,CAACR,EAArB,CAAwB3B,WAAxB,CAAD,CAAR,EAAgDA,WAAhD;AADrB,GAAP;AAGH;;AACD,MAAMmC,oBAAoB,GAAG,aAAa/C,WAAW,CAACgD,MAAZ,EAA1C;AACA,MAAMC,WAAW,GAAG,aAAajD,WAAW,CAACgD,MAAZ,EAAjC;AACA,MAAME,kBAAkB,GAAG,aAAalD,WAAW,CAACgD,MAAZ,EAAxC;AACA,MAAMZ,SAAS,GAAG,aAAanC,UAAU,CAAC+C,MAAX,CAAkB;AAC7CG,EAAAA,MAAM,GAAG;AACL,WAAO,IAAIxC,SAAJ,CAAcf,UAAU,CAAC8C,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAP;AACH,GAH4C;;AAI7CU,EAAAA,MAAM,CAACC,KAAD,EAAQC,EAAR,EAAY;AACd,QAAIA,EAAE,CAACC,UAAP,EAAmB;AACf,UAAIC,MAAM,GAAGH,KAAK,CAACzC,WAAN,CAAkBM,GAAlB,CAAsBoC,EAAE,CAACG,OAAzB,CAAb;AAAA,UAAgD3C,QAAQ,GAAG,IAA3D;;AACA,UAAIuC,KAAK,CAACvC,QAAV,EAAoB;AAChB,YAAI4C,MAAM,GAAGJ,EAAE,CAACG,OAAH,CAAWE,MAAX,CAAkBN,KAAK,CAACvC,QAAN,CAAeN,IAAjC,EAAuC,CAAvC,CAAb;AACAM,QAAAA,QAAQ,GAAGa,cAAc,CAAC6B,MAAD,EAASH,KAAK,CAACvC,QAAN,CAAeJ,UAAxB,EAAoCgD,MAApC,CAAd,IAA6D/B,cAAc,CAAC6B,MAAD,EAAS,IAAT,EAAeE,MAAf,CAAtF;AACH;;AACDL,MAAAA,KAAK,GAAG,IAAI1C,SAAJ,CAAc6C,MAAd,EAAsBH,KAAK,CAACxC,KAA5B,EAAmCC,QAAnC,CAAR;AACH;;AACD,SAAK,IAAI8C,MAAT,IAAmBN,EAAE,CAACpB,OAAtB,EAA+B;AAC3B,UAAI0B,MAAM,CAACC,EAAP,CAAUd,oBAAV,CAAJ,EAAqC;AACjCM,QAAAA,KAAK,GAAG1C,SAAS,CAACI,IAAV,CAAe6C,MAAM,CAACP,KAAtB,EAA6BA,KAAK,CAACxC,KAAnC,CAAR;AACH,OAFD,MAGK,IAAI+C,MAAM,CAACC,EAAP,CAAUZ,WAAV,CAAJ,EAA4B;AAC7BI,QAAAA,KAAK,GAAG,IAAI1C,SAAJ,CAAc0C,KAAK,CAACzC,WAApB,EAAiCgD,MAAM,CAACP,KAAP,GAAeS,SAAS,CAACC,IAAzB,GAAgC,IAAjE,EAAuEV,KAAK,CAACvC,QAA7E,CAAR;AACH,OAFI,MAGA,IAAI8C,MAAM,CAACC,EAAP,CAAUX,kBAAV,CAAJ,EAAmC;AACpCG,QAAAA,KAAK,GAAG,IAAI1C,SAAJ,CAAc0C,KAAK,CAACzC,WAApB,EAAiCyC,KAAK,CAACxC,KAAvC,EAA8C+C,MAAM,CAACP,KAArD,CAAR;AACH;AACJ;;AACD,WAAOA,KAAP;AACH,GAzB4C;;AA0B7CW,EAAAA,OAAO,EAAEC,CAAC,IAAI,CAAC9D,SAAS,CAACK,IAAV,CAAeyD,CAAf,EAAkBC,GAAG,IAAIA,GAAG,CAACrD,KAA7B,CAAD,EACVlB,UAAU,CAAC6C,WAAX,CAAuBhC,IAAvB,CAA4ByD,CAA5B,EAA+BE,CAAC,IAAIA,CAAC,CAACvD,WAAtC,CADU;AA1B+B,CAAlB,CAA/B;AA6BA,MAAM+B,UAAU,GAAG,aAAa/C,UAAU,CAACwB,IAAX,CAAgB;AAAEE,EAAAA,KAAK,EAAE;AAAT,CAAhB,CAAhC;;AACA,SAASsB,WAAT,CAAqBwB,IAArB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AAClC,MAAI;AAAE1D,IAAAA;AAAF,MAAkBwD,IAAI,CAACnC,KAAL,CAAWE,KAAX,CAAiBC,SAAjB,CAAtB;AACA,MAAIP,KAAK,GAAG,EAAZ;AAAA,MAAgB0C,UAAU,GAAG,GAA7B;AAAA,MAAkCC,QAAQ,GAAG,CAA7C;AACA5D,EAAAA,WAAW,CAACkB,OAAZ,CAAoBuC,GAAG,IAAIC,IAAI,GAAG,CAAP,GAAW,CAAX,GAAe,CAAnB,CAAvB,EAA8CD,GAAG,IAAIC,IAAI,GAAG,CAAP,GAAW,CAAX,GAAe,CAAnB,CAAjD,EAAwE,CAAC9D,IAAD,EAAOC,EAAP,EAAW;AAAEsB,IAAAA;AAAF,GAAX,KAAwB;AAC5F,QAAIsC,GAAG,IAAI7D,IAAP,IAAe6D,GAAG,IAAI5D,EAAtB,KACCD,IAAI,IAAIC,EAAR,IAAe,CAAC4D,GAAG,GAAG7D,IAAN,IAAc8D,IAAI,GAAG,CAAtB,MAA6BD,GAAG,GAAG5D,EAAN,IAAY6D,IAAI,GAAG,CAAhD,CADhB,CAAJ,EAC0E;AACtEzC,MAAAA,KAAK,CAAC4C,IAAN,CAAW1C,IAAI,CAACrB,UAAhB;AACA6D,MAAAA,UAAU,GAAGG,IAAI,CAACC,GAAL,CAASnE,IAAT,EAAe+D,UAAf,CAAb;AACAC,MAAAA,QAAQ,GAAGE,IAAI,CAACE,GAAL,CAASnE,EAAT,EAAa+D,QAAb,CAAX;AACH;AACJ,GAPD;AAQA,MAAI,CAAC3C,KAAK,CAACgD,MAAX,EACI,OAAO,IAAP;AACJ,SAAO;AACHR,IAAAA,GAAG,EAAEE,UADF;AAEHO,IAAAA,GAAG,EAAEN,QAFF;AAGHO,IAAAA,KAAK,EAAEX,IAAI,CAACnC,KAAL,CAAW+C,GAAX,CAAeC,MAAf,CAAsBV,UAAtB,EAAkC9D,EAAlC,GAAuC+D,QAH3C;;AAIHrB,IAAAA,MAAM,GAAG;AACL,aAAO;AAAE+B,QAAAA,GAAG,EAAE7E,GAAG,CAAC,IAAD,EAAO;AAAEiB,UAAAA,KAAK,EAAE;AAAT,SAAP,EAAqCO,KAAK,CAACX,GAAN,CAAUC,CAAC,IAAIgE,gBAAgB,CAACf,IAAD,EAAOjD,CAAP,EAAU,KAAV,CAA/B,CAArC;AAAV,OAAP;AACH;;AANE,GAAP;AAQH;AACD;AACA;AACA;;;AACA,MAAMiE,aAAa,GAAIhB,IAAD,IAAU;AAC5B,MAAIjC,KAAK,GAAGiC,IAAI,CAACnC,KAAL,CAAWE,KAAX,CAAiBC,SAAjB,EAA4B,KAA5B,CAAZ;AACA,MAAI,CAACD,KAAD,IAAU,CAACA,KAAK,CAACtB,KAArB,EACIuD,IAAI,CAACiB,QAAL,CAAc;AAAEnD,IAAAA,OAAO,EAAEF,eAAe,CAACoC,IAAI,CAACnC,KAAN,EAAa,CAACgB,WAAW,CAACV,EAAZ,CAAe,IAAf,CAAD,CAAb;AAA1B,GAAd;AACJ,MAAI1B,KAAK,GAAGT,QAAQ,CAACgE,IAAD,EAAON,SAAS,CAACC,IAAjB,CAApB;AACA,MAAIlD,KAAJ,EACIA,KAAK,CAACqE,GAAN,CAAUI,aAAV,CAAwB,mBAAxB,EAA6CC,KAA7C;AACJ,SAAO,IAAP;AACH,CARD;AASA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAIpB,IAAD,IAAU;AAC7B,MAAIjC,KAAK,GAAGiC,IAAI,CAACnC,KAAL,CAAWE,KAAX,CAAiBC,SAAjB,EAA4B,KAA5B,CAAZ;AACA,MAAI,CAACD,KAAD,IAAU,CAACA,KAAK,CAACtB,KAArB,EACI,OAAO,KAAP;AACJuD,EAAAA,IAAI,CAACiB,QAAL,CAAc;AAAEnD,IAAAA,OAAO,EAAEe,WAAW,CAACV,EAAZ,CAAe,KAAf;AAAX,GAAd;AACA,SAAO,IAAP;AACH,CAND;AAOA;AACA;AACA;;;AACA,MAAMkD,cAAc,GAAIrB,IAAD,IAAU;AAC7B,MAAIjC,KAAK,GAAGiC,IAAI,CAACnC,KAAL,CAAWE,KAAX,CAAiBC,SAAjB,EAA4B,KAA5B,CAAZ;AACA,MAAI,CAACD,KAAL,EACI,OAAO,KAAP;AACJ,MAAIuD,GAAG,GAAGtB,IAAI,CAACnC,KAAL,CAAW0D,SAAX,CAAqBC,IAA/B;AAAA,MAAqCC,IAAI,GAAG1D,KAAK,CAACvB,WAAN,CAAkBkF,IAAlB,CAAuBJ,GAAG,CAACjF,EAAJ,GAAS,CAAhC,CAA5C;;AACA,MAAI,CAACoF,IAAI,CAACxC,KAAV,EAAiB;AACbwC,IAAAA,IAAI,GAAG1D,KAAK,CAACvB,WAAN,CAAkBkF,IAAlB,CAAuB,CAAvB,CAAP;AACA,QAAI,CAACD,IAAI,CAACxC,KAAN,IAAewC,IAAI,CAACrF,IAAL,IAAakF,GAAG,CAAClF,IAAjB,IAAyBqF,IAAI,CAACpF,EAAL,IAAWiF,GAAG,CAACjF,EAA3D,EACI,OAAO,KAAP;AACP;;AACD2D,EAAAA,IAAI,CAACiB,QAAL,CAAc;AAAEM,IAAAA,SAAS,EAAE;AAAEI,MAAAA,MAAM,EAAEF,IAAI,CAACrF,IAAf;AAAqBwF,MAAAA,IAAI,EAAEH,IAAI,CAACpF;AAAhC,KAAb;AAAmDwF,IAAAA,cAAc,EAAE;AAAnE,GAAd;AACA,SAAO,IAAP;AACH,CAZD;AAaA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,UAAU,GAAG,CACf;AAAEC,EAAAA,GAAG,EAAE,aAAP;AAAsBC,EAAAA,GAAG,EAAEhB;AAA3B,CADe,EAEf;AAAEe,EAAAA,GAAG,EAAE,IAAP;AAAaC,EAAAA,GAAG,EAAEX;AAAlB,CAFe,CAAnB;AAIA;AACA;AACA;AACA;AACA;;AACA,SAASY,MAAT,CAAgBC,MAAhB,EAAwBC,MAAM,GAAG,EAAjC,EAAqC;AACjC,MAAIC,EAAJ;;AACA,MAAIC,KAAK,GAAG,CAACD,EAAE,GAAGD,MAAM,CAACE,KAAb,MAAwB,IAAxB,IAAgCD,EAAE,KAAK,KAAK,CAA5C,GAAgDA,EAAhD,GAAqD,GAAjE;AACA,SAAO3G,UAAU,CAAC6G,SAAX,CAAqB,MAAM;AAC9BnG,IAAAA,WAAW,CAAC6D,IAAD,EAAO;AACd,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKuC,QAAL,GAAgBC,IAAI,CAACC,GAAL,KAAaJ,KAA7B;AACA,WAAKxF,GAAL,GAAW,IAAX;AACA,WAAKmF,GAAL,GAAW,KAAKA,GAAL,CAASU,IAAT,CAAc,IAAd,CAAX;AACAC,MAAAA,UAAU,CAAC,KAAKX,GAAN,EAAWK,KAAX,CAAV;AACH;;AACDL,IAAAA,GAAG,GAAG;AACF,UAAIS,GAAG,GAAGD,IAAI,CAACC,GAAL,EAAV;;AACA,UAAIA,GAAG,GAAG,KAAKF,QAAL,GAAgB,EAA1B,EAA8B;AAC1BI,QAAAA,UAAU,CAAC,KAAKX,GAAN,EAAW,KAAKO,QAAL,GAAgBE,GAA3B,CAAV;AACH,OAFD,MAGK;AACD,aAAK5F,GAAL,GAAW,KAAX;AACA,YAAI;AAAEgB,UAAAA;AAAF,YAAY,KAAKmC,IAArB;AACA4C,QAAAA,OAAO,CAACC,OAAR,CAAgBX,MAAM,CAAC,KAAKlC,IAAN,CAAtB,EAAmC8C,IAAnC,CAAwCC,WAAW,IAAI;AACnD,cAAIX,EAAJ,EAAQY,EAAR;;AACA,cAAI,KAAKhD,IAAL,CAAUnC,KAAV,CAAgB+C,GAAhB,IAAuB/C,KAAK,CAAC+C,GAA7B,KACCmC,WAAW,CAACtC,MAAZ,KAAuB,CAACuC,EAAE,GAAG,CAACZ,EAAE,GAAG,KAAKpC,IAAL,CAAUnC,KAAV,CAAgBE,KAAhB,CAAsBC,SAAtB,EAAiC,KAAjC,CAAN,MAAmD,IAAnD,IAA2DoE,EAAE,KAAK,KAAK,CAAvE,GAA2E,KAAK,CAAhF,GAAoFA,EAAE,CAAC5F,WAA7F,MAA8G,IAA9G,IAAsHwG,EAAE,KAAK,KAAK,CAAlI,GAAsI,KAAK,CAA3I,GAA+IA,EAAE,CAACC,IAAzK,CADD,CAAJ,EAEI,KAAKjD,IAAL,CAAUiB,QAAV,CAAmBvC,cAAc,CAAC,KAAKsB,IAAL,CAAUnC,KAAX,EAAkBkF,WAAlB,CAAjC;AACP,SALD,EAKGG,KAAK,IAAI;AAAExH,UAAAA,YAAY,CAAC,KAAKsE,IAAL,CAAUnC,KAAX,EAAkBqF,KAAlB,CAAZ;AAAuC,SALrD;AAMH;AACJ;;AACDlE,IAAAA,MAAM,CAACA,MAAD,EAAS;AACX,UAAIA,MAAM,CAACG,UAAX,EAAuB;AACnB,aAAKoD,QAAL,GAAgBC,IAAI,CAACC,GAAL,KAAaJ,KAA7B;;AACA,YAAI,CAAC,KAAKxF,GAAV,EAAe;AACX,eAAKA,GAAL,GAAW,IAAX;AACA8F,UAAAA,UAAU,CAAC,KAAKX,GAAN,EAAWK,KAAX,CAAV;AACH;AACJ;AACJ;;AAhC6B,GAA3B,CAAP;AAkCH;;AACD,SAASc,UAAT,CAAoBC,OAApB,EAA6B;AACzB,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAID,OAAJ,EACIA,OAAO,EAAE,KAAK,IAAI;AAAEE,IAAAA;AAAF,GAAT,IAAqBF,OAArB,EAA8B;AACnC,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAAC7C,MAAzB,EAAiC8C,CAAC,EAAlC,EAAsC;AAClC,UAAIC,EAAE,GAAGF,IAAI,CAACC,CAAD,CAAb;;AACA,UAAI,WAAWE,IAAX,CAAgBD,EAAhB,KAAuB,CAACH,QAAQ,CAACK,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACC,WAAF,MAAmBJ,EAAE,CAACI,WAAH,EAAtC,CAA5B,EAAqF;AACjFP,QAAAA,QAAQ,CAAChD,IAAT,CAAcmD,EAAd;AACA,iBAASJ,OAAT;AACH;AACJ;;AACDC,IAAAA,QAAQ,CAAChD,IAAT,CAAc,EAAd;AACH;AACL,SAAOgD,QAAP;AACH;;AACD,SAAStC,gBAAT,CAA0Bf,IAA1B,EAAgC1D,UAAhC,EAA4CuH,OAA5C,EAAqD;AACjD,MAAIzB,EAAJ;;AACA,MAAI0B,IAAI,GAAGD,OAAO,GAAGV,UAAU,CAAC7G,UAAU,CAAC8G,OAAZ,CAAb,GAAoC,EAAtD;AACA,SAAOnH,GAAG,CAAC,IAAD,EAAO;AAAEiB,IAAAA,KAAK,EAAE,iCAAiCZ,UAAU,CAACa;AAArD,GAAP,EAAwElB,GAAG,CAAC,MAAD,EAAS;AAAEiB,IAAAA,KAAK,EAAE;AAAT,GAAT,EAAyCZ,UAAU,CAACyH,OAApD,CAA3E,EAAyI,CAAC3B,EAAE,GAAG9F,UAAU,CAAC8G,OAAjB,MAA8B,IAA9B,IAAsChB,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAACtF,GAAH,CAAO,CAACkH,MAAD,EAAST,CAAT,KAAe;AACpO,QAAIU,KAAK,GAAIC,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAI1G,KAAK,GAAGF,cAAc,CAACyC,IAAI,CAACnC,KAAL,CAAWE,KAAX,CAAiBC,SAAjB,EAA4BxB,WAA7B,EAA0CF,UAA1C,CAA1B;AACA,UAAImB,KAAJ,EACIuG,MAAM,CAACI,KAAP,CAAapE,IAAb,EAAmBvC,KAAK,CAACrB,IAAzB,EAA+BqB,KAAK,CAACpB,EAArC;AACP,KALD;;AAMA,QAAI;AAAEiH,MAAAA;AAAF,QAAWU,MAAf;AAAA,QAAuBK,QAAQ,GAAGP,IAAI,CAACP,CAAD,CAAJ,GAAUD,IAAI,CAACgB,OAAL,CAAaR,IAAI,CAACP,CAAD,CAAjB,CAAV,GAAkC,CAAC,CAArE;AACA,QAAIgB,OAAO,GAAGF,QAAQ,GAAG,CAAX,GAAef,IAAf,GAAsB,CAACA,IAAI,CAACkB,KAAL,CAAW,CAAX,EAAcH,QAAd,CAAD,EAChCpI,GAAG,CAAC,GAAD,EAAMqH,IAAI,CAACkB,KAAL,CAAWH,QAAX,EAAqBA,QAAQ,GAAG,CAAhC,CAAN,CAD6B,EAEhCf,IAAI,CAACkB,KAAL,CAAWH,QAAQ,GAAG,CAAtB,CAFgC,CAApC;AAGA,WAAOpI,GAAG,CAAC,QAAD,EAAW;AACjBiB,MAAAA,KAAK,EAAE,qBADU;AAEjBuH,MAAAA,OAAO,EAAER,KAFQ;AAGjBS,MAAAA,WAAW,EAAET,KAHI;AAIjB,oBAAe,YAAWX,IAAK,GAAEe,QAAQ,GAAG,CAAX,GAAe,EAAf,GAAqB,iBAAgBP,IAAI,CAACP,CAAD,CAAI,IAAI;AAJjE,KAAX,EAKPgB,OALO,CAAV;AAMH,GAjBiN,CAAxM,EAiBNjI,UAAU,CAAC4F,MAAX,IAAqBjG,GAAG,CAAC,KAAD,EAAQ;AAAEiB,IAAAA,KAAK,EAAE;AAAT,GAAR,EAA0CZ,UAAU,CAAC4F,MAArD,CAjBlB,CAAV;AAkBH;;AACD,MAAM5E,gBAAN,SAA+B3B,UAA/B,CAA0C;AACtCQ,EAAAA,WAAW,CAACG,UAAD,EAAa;AACpB;AACA,SAAKA,UAAL,GAAkBA,UAAlB;AACH;;AACDqI,EAAAA,EAAE,CAACC,KAAD,EAAQ;AAAE,WAAOA,KAAK,CAACtI,UAAN,IAAoB,KAAKA,UAAhC;AAA6C;;AACzDuI,EAAAA,KAAK,GAAG;AACJ,WAAO5I,GAAG,CAAC,MAAD,EAAS;AAAEiB,MAAAA,KAAK,EAAE,+BAA+B,KAAKZ,UAAL,CAAgBa;AAAxD,KAAT,CAAV;AACH;;AARqC;;AAU1C,MAAM2H,SAAN,CAAgB;AACZ3I,EAAAA,WAAW,CAAC6D,IAAD,EAAO1D,UAAP,EAAmB;AAC1B,SAAKA,UAAL,GAAkBA,UAAlB;AACA,SAAKyI,EAAL,GAAU,UAAUzE,IAAI,CAAC0E,KAAL,CAAW1E,IAAI,CAAC2E,MAAL,KAAgB,UAA3B,EAAuCC,QAAvC,CAAgD,EAAhD,CAApB;AACA,SAAKpE,GAAL,GAAWC,gBAAgB,CAACf,IAAD,EAAO1D,UAAP,EAAmB,IAAnB,CAA3B;AACA,SAAKwE,GAAL,CAASiE,EAAT,GAAc,KAAKA,EAAnB;AACA,SAAKjE,GAAL,CAASqE,YAAT,CAAsB,MAAtB,EAA8B,QAA9B;AACH;;AAPW;;AAShB,MAAMzF,SAAN,CAAgB;AACZvD,EAAAA,WAAW,CAAC6D,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKoF,KAAL,GAAa,EAAb;;AACA,QAAIC,SAAS,GAAIC,KAAD,IAAW;AACvB,UAAIA,KAAK,CAACC,OAAN,IAAiB,EAArB,EAAyB;AAAE;AACvBnE,QAAAA,cAAc,CAAC,KAAKpB,IAAN,CAAd;AACA,aAAKA,IAAL,CAAUmB,KAAV;AACH,OAHD,MAIK,IAAImE,KAAK,CAACC,OAAN,IAAiB,EAAjB,IAAuBD,KAAK,CAACC,OAAN,IAAiB,EAA5C,EAAgD;AAAE;AACnD,aAAKC,aAAL,CAAmB,CAAC,KAAKC,aAAL,GAAqB,CAArB,GAAyB,KAAKL,KAAL,CAAW3E,MAArC,IAA+C,KAAK2E,KAAL,CAAW3E,MAA7E;AACH,OAFI,MAGA,IAAI6E,KAAK,CAACC,OAAN,IAAiB,EAAjB,IAAuBD,KAAK,CAACC,OAAN,IAAiB,EAA5C,EAAgD;AAAE;AACnD,aAAKC,aAAL,CAAmB,CAAC,KAAKC,aAAL,GAAqB,CAAtB,IAA2B,KAAKL,KAAL,CAAW3E,MAAzD;AACH,OAFI,MAGA,IAAI6E,KAAK,CAACC,OAAN,IAAiB,EAArB,EAAyB;AAAE;AAC5B,aAAKC,aAAL,CAAmB,CAAnB;AACH,OAFI,MAGA,IAAIF,KAAK,CAACC,OAAN,IAAiB,EAArB,EAAyB;AAAE;AAC5B,aAAKC,aAAL,CAAmB,KAAKJ,KAAL,CAAW3E,MAAX,GAAoB,CAAvC;AACH,OAFI,MAGA,IAAI6E,KAAK,CAACC,OAAN,IAAiB,EAArB,EAAyB;AAAE;AAC5B,aAAKvF,IAAL,CAAUmB,KAAV;AACH,OAFI,MAGA,IAAImE,KAAK,CAACC,OAAN,IAAiB,EAAjB,IAAuBD,KAAK,CAACC,OAAN,IAAiB,EAAxC,IAA8C,KAAKH,KAAL,CAAW3E,MAA7D,EAAqE;AAAE;AACxE,YAAI;AAAEnE,UAAAA;AAAF,YAAiB,KAAK8I,KAAL,CAAW,KAAKK,aAAhB,CAArB;AAAA,YAAqD3B,IAAI,GAAGX,UAAU,CAAC7G,UAAU,CAAC8G,OAAZ,CAAtE;;AACA,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,IAAI,CAACrD,MAAzB,EAAiC8C,CAAC,EAAlC,EACI,IAAIO,IAAI,CAACP,CAAD,CAAJ,CAAQmC,WAAR,GAAsBC,UAAtB,CAAiC,CAAjC,KAAuCL,KAAK,CAACC,OAAjD,EAA0D;AACtD,cAAI9H,KAAK,GAAGF,cAAc,CAAC,KAAKyC,IAAL,CAAUnC,KAAV,CAAgBE,KAAhB,CAAsBC,SAAtB,EAAiCxB,WAAlC,EAA+CF,UAA/C,CAA1B;AACA,cAAImB,KAAJ,EACInB,UAAU,CAAC8G,OAAX,CAAmBG,CAAnB,EAAsBa,KAAtB,CAA4BpE,IAA5B,EAAkCvC,KAAK,CAACrB,IAAxC,EAA8CqB,KAAK,CAACpB,EAApD;AACP;AACR,OARI,MASA;AACD;AACH;;AACDiJ,MAAAA,KAAK,CAACnB,cAAN;AACH,KAjCD;;AAkCA,QAAIM,OAAO,GAAIa,KAAD,IAAW;AACrB,WAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK6B,KAAL,CAAW3E,MAA/B,EAAuC8C,CAAC,EAAxC,EAA4C;AACxC,YAAI,KAAK6B,KAAL,CAAW7B,CAAX,EAAczC,GAAd,CAAkB8E,QAAlB,CAA2BN,KAAK,CAACO,MAAjC,CAAJ,EACI,KAAKL,aAAL,CAAmBjC,CAAnB;AACP;AACJ,KALD;;AAMA,SAAKuC,IAAL,GAAY7J,GAAG,CAAC,IAAD,EAAO;AAClB8J,MAAAA,QAAQ,EAAE,CADQ;AAElBC,MAAAA,IAAI,EAAE,SAFY;AAGlB,oBAAc,KAAKhG,IAAL,CAAUnC,KAAV,CAAgBoI,MAAhB,CAAuB,aAAvB,CAHI;AAIlBZ,MAAAA,SAJkB;AAKlBZ,MAAAA;AALkB,KAAP,CAAf;AAOA,SAAK3D,GAAL,GAAW7E,GAAG,CAAC,KAAD,EAAQ;AAAEiB,MAAAA,KAAK,EAAE;AAAT,KAAR,EAAoC,KAAK4I,IAAzC,EAA+C7J,GAAG,CAAC,QAAD,EAAW;AACvEqH,MAAAA,IAAI,EAAE,OADiE;AAEvE,oBAAc,KAAKtD,IAAL,CAAUnC,KAAV,CAAgBoI,MAAhB,CAAuB,OAAvB,CAFyD;AAGvExB,MAAAA,OAAO,EAAE,MAAMrD,cAAc,CAAC,KAAKpB,IAAN;AAH0C,KAAX,EAI7D,GAJ6D,CAAlD,CAAd;AAKA,SAAKhB,MAAL;AACH;;AACgB,MAAbyG,aAAa,GAAG;AAChB,QAAI/I,QAAQ,GAAG,KAAKsD,IAAL,CAAUnC,KAAV,CAAgBE,KAAhB,CAAsBC,SAAtB,EAAiCtB,QAAhD;AACA,QAAI,CAACA,QAAL,EACI,OAAO,CAAC,CAAR;;AACJ,SAAK,IAAI6G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK6B,KAAL,CAAW3E,MAA/B,EAAuC8C,CAAC,EAAxC,EACI,IAAI,KAAK6B,KAAL,CAAW7B,CAAX,EAAcjH,UAAd,IAA4BI,QAAQ,CAACJ,UAAzC,EACI,OAAOiH,CAAP;;AACR,WAAO,CAAC,CAAR;AACH;;AACDvE,EAAAA,MAAM,GAAG;AACL,QAAI;AAAExC,MAAAA,WAAF;AAAeE,MAAAA;AAAf,QAA4B,KAAKsD,IAAL,CAAUnC,KAAV,CAAgBE,KAAhB,CAAsBC,SAAtB,CAAhC;AACA,QAAIuF,CAAC,GAAG,CAAR;AAAA,QAAW2C,SAAS,GAAG,KAAvB;AAAA,QAA8BC,eAAe,GAAG,IAAhD;AACA3J,IAAAA,WAAW,CAACkB,OAAZ,CAAoB,CAApB,EAAuB,KAAKsC,IAAL,CAAUnC,KAAV,CAAgB+C,GAAhB,CAAoBH,MAA3C,EAAmD,CAAC2F,MAAD,EAASC,IAAT,EAAe;AAAE1I,MAAAA;AAAF,KAAf,KAA4B;AAC3E,UAAIF,KAAK,GAAG,CAAC,CAAb;AAAA,UAAgB6I,IAAhB;;AACA,WAAK,IAAIC,CAAC,GAAGhD,CAAb,EAAgBgD,CAAC,GAAG,KAAKnB,KAAL,CAAW3E,MAA/B,EAAuC8F,CAAC,EAAxC,EACI,IAAI,KAAKnB,KAAL,CAAWmB,CAAX,EAAcjK,UAAd,IAA4BqB,IAAI,CAACrB,UAArC,EAAiD;AAC7CmB,QAAAA,KAAK,GAAG8I,CAAR;AACA;AACH;;AACL,UAAI9I,KAAK,GAAG,CAAZ,EAAe;AACX6I,QAAAA,IAAI,GAAG,IAAIxB,SAAJ,CAAc,KAAK9E,IAAnB,EAAyBrC,IAAI,CAACrB,UAA9B,CAAP;AACA,aAAK8I,KAAL,CAAWoB,MAAX,CAAkBjD,CAAlB,EAAqB,CAArB,EAAwB+C,IAAxB;AACAJ,QAAAA,SAAS,GAAG,IAAZ;AACH,OAJD,MAKK;AACDI,QAAAA,IAAI,GAAG,KAAKlB,KAAL,CAAW3H,KAAX,CAAP;;AACA,YAAIA,KAAK,GAAG8F,CAAZ,EAAe;AACX,eAAK6B,KAAL,CAAWoB,MAAX,CAAkBjD,CAAlB,EAAqB9F,KAAK,GAAG8F,CAA7B;AACA2C,UAAAA,SAAS,GAAG,IAAZ;AACH;AACJ;;AACD,UAAIxJ,QAAQ,IAAI4J,IAAI,CAAChK,UAAL,IAAmBI,QAAQ,CAACJ,UAA5C,EAAwD;AACpD,YAAI,CAACgK,IAAI,CAACxF,GAAL,CAAS2F,YAAT,CAAsB,eAAtB,CAAL,EAA6C;AACzCH,UAAAA,IAAI,CAACxF,GAAL,CAASqE,YAAT,CAAsB,eAAtB,EAAuC,MAAvC;AACAgB,UAAAA,eAAe,GAAGG,IAAlB;AACH;AACJ,OALD,MAMK,IAAIA,IAAI,CAACxF,GAAL,CAAS2F,YAAT,CAAsB,eAAtB,CAAJ,EAA4C;AAC7CH,QAAAA,IAAI,CAACxF,GAAL,CAAS4F,eAAT,CAAyB,eAAzB;AACH;;AACDnD,MAAAA,CAAC;AACJ,KA7BD;;AA8BA,WAAOA,CAAC,GAAG,KAAK6B,KAAL,CAAW3E,MAAf,IAAyB,EAAE,KAAK2E,KAAL,CAAW3E,MAAX,IAAqB,CAArB,IAA0B,KAAK2E,KAAL,CAAW,CAAX,EAAc9I,UAAd,CAAyBF,IAAzB,GAAgC,CAA5D,CAAhC,EAAgG;AAC5F8J,MAAAA,SAAS,GAAG,IAAZ;AACA,WAAKd,KAAL,CAAWuB,GAAX;AACH;;AACD,QAAI,KAAKvB,KAAL,CAAW3E,MAAX,IAAqB,CAAzB,EAA4B;AACxB,WAAK2E,KAAL,CAAW/E,IAAX,CAAgB,IAAIyE,SAAJ,CAAc,KAAK9E,IAAnB,EAAyB;AACrC5D,QAAAA,IAAI,EAAE,CAAC,CAD8B;AAC3BC,QAAAA,EAAE,EAAE,CAAC,CADsB;AAErCc,QAAAA,QAAQ,EAAE,MAF2B;AAGrC4G,QAAAA,OAAO,EAAE,KAAK/D,IAAL,CAAUnC,KAAV,CAAgBoI,MAAhB,CAAuB,gBAAvB;AAH4B,OAAzB,CAAhB;AAKAC,MAAAA,SAAS,GAAG,IAAZ;AACH;;AACD,QAAIC,eAAJ,EAAqB;AACjB,WAAKL,IAAL,CAAUX,YAAV,CAAuB,uBAAvB,EAAgDgB,eAAe,CAACpB,EAAhE;AACA,WAAK/E,IAAL,CAAU4G,cAAV,CAAyB;AACrB7E,QAAAA,GAAG,EAAE,IADgB;AAErB8E,QAAAA,IAAI,EAAE,OAAO;AAAEvF,UAAAA,GAAG,EAAE6E,eAAe,CAACrF,GAAhB,CAAoBgG,qBAApB,EAAP;AAAoDrK,UAAAA,KAAK,EAAE,KAAKqJ,IAAL,CAAUgB,qBAAV;AAA3D,SAAP,CAFe;AAGrBC,QAAAA,KAAK,EAAE,CAAC;AAAEzF,UAAAA,GAAF;AAAO7E,UAAAA;AAAP,SAAD,KAAoB;AACvB,cAAI6E,GAAG,CAAC0F,GAAJ,GAAUvK,KAAK,CAACuK,GAApB,EACI,KAAKlB,IAAL,CAAUmB,SAAV,IAAuBxK,KAAK,CAACuK,GAAN,GAAY1F,GAAG,CAAC0F,GAAvC,CADJ,KAEK,IAAI1F,GAAG,CAAC4F,MAAJ,GAAazK,KAAK,CAACyK,MAAvB,EACD,KAAKpB,IAAL,CAAUmB,SAAV,IAAuB3F,GAAG,CAAC4F,MAAJ,GAAazK,KAAK,CAACyK,MAA1C;AACP;AARoB,OAAzB;AAUH,KAZD,MAaK,IAAI,CAAC,KAAK9B,KAAL,CAAW3E,MAAhB,EAAwB;AACzB,WAAKqF,IAAL,CAAUY,eAAV,CAA0B,uBAA1B;AACH;;AACD,QAAIR,SAAJ,EACI,KAAKiB,IAAL;AACP;;AACDA,EAAAA,IAAI,GAAG;AACH,QAAIC,MAAM,GAAG,KAAKtB,IAAL,CAAUuB,UAAvB;;AACA,aAASC,EAAT,GAAc;AACV,UAAIC,IAAI,GAAGH,MAAX;AACAA,MAAAA,MAAM,GAAGG,IAAI,CAACC,WAAd;AACAD,MAAAA,IAAI,CAACE,MAAL;AACH;;AACD,SAAK,IAAInB,IAAT,IAAiB,KAAKlB,KAAtB,EAA6B;AACzB,UAAIkB,IAAI,CAACxF,GAAL,CAAS4G,UAAT,IAAuB,KAAK5B,IAAhC,EAAsC;AAClC,eAAOsB,MAAM,IAAId,IAAI,CAACxF,GAAtB,EACIwG,EAAE;;AACNF,QAAAA,MAAM,GAAGd,IAAI,CAACxF,GAAL,CAAS0G,WAAlB;AACH,OAJD,MAKK;AACD,aAAK1B,IAAL,CAAU6B,YAAV,CAAuBrB,IAAI,CAACxF,GAA5B,EAAiCsG,MAAjC;AACH;AACJ;;AACD,WAAOA,MAAP,EACIE,EAAE;AACT;;AACD9B,EAAAA,aAAa,CAACC,aAAD,EAAgB;AACzB,QAAI,KAAKL,KAAL,CAAW3E,MAAX,IAAqB,CAAzB,EACI;AACJ,QAAI1C,KAAK,GAAG,KAAKiC,IAAL,CAAUnC,KAAV,CAAgBE,KAAhB,CAAsBC,SAAtB,CAAZ;AACA,QAAIuD,SAAS,GAAGhE,cAAc,CAACQ,KAAK,CAACvB,WAAP,EAAoB,KAAK4I,KAAL,CAAWK,aAAX,EAA0BnJ,UAA9C,CAA9B;AACA,QAAI,CAACiF,SAAL,EACI;AACJ,SAAKvB,IAAL,CAAUiB,QAAV,CAAmB;AACfM,MAAAA,SAAS,EAAE;AAAEI,QAAAA,MAAM,EAAEJ,SAAS,CAACnF,IAApB;AAA0BwF,QAAAA,IAAI,EAAEL,SAAS,CAAClF;AAA1C,OADI;AAEfwF,MAAAA,cAAc,EAAE,IAFD;AAGf/D,MAAAA,OAAO,EAAEgB,kBAAkB,CAACX,EAAnB,CAAsBoD,SAAtB;AAHM,KAAnB;AAKH;;AACU,SAAJ5B,IAAI,CAACK,IAAD,EAAO;AAAE,WAAO,IAAIN,SAAJ,CAAcM,IAAd,CAAP;AAA6B;;AApKrC;;AAsKhB,SAAS4H,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,MAAI,OAAOC,IAAP,IAAe,UAAnB,EACI,OAAO,MAAP;AACJ,MAAIC,GAAG,GAAI;AACf,kDAAkDF,KAAM;AACxD,SAFI;AAGA,SAAQ,kCAAiCC,IAAI,CAACC,GAAD,CAAM,IAAnD;AACH;;AACD,MAAMtJ,SAAS,GAAG,aAAalD,UAAU,CAACkD,SAAX,CAAqB;AAChD,oBAAkB;AACduJ,IAAAA,OAAO,EAAE,iBADK;AAEdC,IAAAA,UAAU,EAAE,MAFE;AAGdC,IAAAA,OAAO,EAAE,OAHK;AAIdC,IAAAA,UAAU,EAAE;AAJE,GAD8B;AAOhD,0BAAwB;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAPwB;AAQhD,4BAA0B;AAAEA,IAAAA,UAAU,EAAE;AAAd,GARsB;AAShD,yBAAuB;AAAEA,IAAAA,UAAU,EAAE;AAAd,GATyB;AAUhD,0BAAwB;AACpBC,IAAAA,IAAI,EAAE,SADc;AAEpBC,IAAAA,MAAM,EAAE,MAFY;AAGpBN,IAAAA,OAAO,EAAE,SAHW;AAIpBO,IAAAA,eAAe,EAAE,MAJG;AAKpBV,IAAAA,KAAK,EAAE,OALa;AAMpBW,IAAAA,YAAY,EAAE,KANM;AAOpBP,IAAAA,UAAU,EAAE;AAPQ,GAVwB;AAmBhD,0BAAwB;AACpBQ,IAAAA,QAAQ,EAAE,KADU;AAEpBC,IAAAA,OAAO,EAAE;AAFW,GAnBwB;AAuBhD,mBAAiB;AACbC,IAAAA,kBAAkB,EAAE,aADP;AAEbC,IAAAA,gBAAgB,EAAE;AAFL,GAvB+B;AA2BhD,yBAAuB;AAAEC,IAAAA,eAAe,EAAE,aAAajB,SAAS,CAAC,MAAD;AAAzC,GA3ByB;AA4BhD,2BAAyB;AAAEiB,IAAAA,eAAe,EAAE,aAAajB,SAAS,CAAC,QAAD;AAAzC,GA5BuB;AA6BhD,wBAAsB;AAAEiB,IAAAA,eAAe,EAAE,aAAajB,SAAS,CAAC,MAAD;AAAzC,GA7B0B;AA8BhD,0BAAwB;AAAEW,IAAAA,eAAe,EAAE;AAAnB,GA9BwB;AA+BhD,mBAAiB;AACbO,IAAAA,QAAQ,EAAE,UADG;AAEb,eAAW;AACPC,MAAAA,OAAO,EAAE,IADF;AAEPD,MAAAA,QAAQ,EAAE,UAFH;AAGP5B,MAAAA,MAAM,EAAE,CAHD;AAIP8B,MAAAA,IAAI,EAAE,MAJC;AAKPZ,MAAAA,UAAU,EAAE,uBALL;AAMPa,MAAAA,WAAW,EAAE,uBANN;AAOPC,MAAAA,YAAY,EAAE;AAPP;AAFE,GA/B+B;AA2ChD,2BAAyB;AACrB,eAAW;AAAEC,MAAAA,iBAAiB,EAAE;AAArB;AADU,GA3CuB;AA8ChD,wBAAsB;AAClB,eAAW;AAAEA,MAAAA,iBAAiB,EAAE;AAArB;AADO,GA9C0B;AAiDhD,6BAA2B;AACvBL,IAAAA,QAAQ,EAAE,UADa;AAEvB,YAAQ;AACJM,MAAAA,SAAS,EAAE,OADP;AAEJC,MAAAA,SAAS,EAAE,MAFP;AAGJ,2BAAqB;AACjBd,QAAAA,eAAe,EAAE,MADA;AAEjB,eAAO;AAAEe,UAAAA,cAAc,EAAE;AAAlB;AAFU,OAHjB;AAOJ,iCAA2B;AACvBC,QAAAA,mBAAmB,EAAE,MADE;AAEvBhB,QAAAA,eAAe,EAAE,WAFM;AAGvBiB,QAAAA,cAAc,EAAE,OAHO;AAIvB3B,QAAAA,KAAK,EAAE;AAJgB,OAPvB;AAaJ,aAAO;AAAEyB,QAAAA,cAAc,EAAE;AAAlB,OAbH;AAcJtB,MAAAA,OAAO,EAAE,CAdL;AAeJyB,MAAAA,MAAM,EAAE;AAfJ,KAFe;AAmBvB,sBAAkB;AACdX,MAAAA,QAAQ,EAAE,UADI;AAEd9B,MAAAA,GAAG,EAAE,GAFS;AAGd0C,MAAAA,KAAK,EAAE,KAHO;AAIdC,MAAAA,UAAU,EAAE,SAJE;AAKdrB,MAAAA,MAAM,EAAE,MALM;AAMdD,MAAAA,IAAI,EAAE,SANQ;AAOdL,MAAAA,OAAO,EAAE,CAPK;AAQdyB,MAAAA,MAAM,EAAE;AARM;AAnBK;AAjDqB,CAArB,CAA/B;AAiFA,SAASrI,cAAT,EAAyBU,UAAzB,EAAqCG,MAArC,EAA6CZ,cAA7C,EAA6DL,aAA7D,EAA4EtC,cAA5E","sourcesContent":["import { EditorView, Decoration, ViewPlugin, logException, WidgetType } from '@codemirror/view';\nimport { StateEffect, StateField } from '@codemirror/state';\nimport { hoverTooltip } from '@codemirror/tooltip';\nimport { showPanel, getPanel } from '@codemirror/panel';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel) {\n        let ranges = Decoration.set(diagnostics.map((d) => {\n            return d.from < d.to\n                ? Decoration.mark({\n                    attributes: { class: \"cm-lintRange cm-lintRange-\" + d.severity },\n                    diagnostic: d\n                }).range(d.from, d.to)\n                : Decoration.widget({\n                    widget: new DiagnosticWidget(d),\n                    diagnostic: d\n                }).range(d.from);\n        }));\n        return new LintState(ranges, panel, findDiagnostic(ranges));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction maybeEnableLint(state, effects, diagnostics) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of([\n        diagnostics ? lintState.init(() => LintState.init(diagnostics, null)) : lintState,\n        EditorView.decorations.compute([lintState], state => {\n            let { selected, panel } = state.field(lintState);\n            return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n                activeMark.range(selected.from, selected.to)\n            ]);\n        }),\n        hoverTooltip(lintTooltip),\n        baseTheme\n    ]));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)], diagnostics)\n    };\n}\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            value = new LintState(mapped, value.panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                value = LintState.init(effect.value, value.panel);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(from, stackStart);\n            stackEnd = Math.max(to, stackEnd);\n        }\n    });\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        create() {\n            return { dom: elt(\"ul\", { class: \"cm-tooltip-lint\" }, found.map(d => renderDiagnostic(view, d, false))) };\n        }\n    };\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel },\n    { key: \"F8\", run: nextDiagnostic }\n];\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed).\n*/\nfunction linter(source, config = {}) {\n    var _a;\n    let delay = (_a = config.delay) !== null && _a !== void 0 ? _a : 750;\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.lintTime = Date.now() + delay;\n            this.set = true;\n            this.run = this.run.bind(this);\n            setTimeout(this.run, delay);\n        }\n        run() {\n            let now = Date.now();\n            if (now < this.lintTime - 10) {\n                setTimeout(this.run, this.lintTime - now);\n            }\n            else {\n                this.set = false;\n                let { state } = this.view;\n                Promise.resolve(source(this.view)).then(annotations => {\n                    var _a, _b;\n                    if (this.view.state.doc == state.doc &&\n                        (annotations.length || ((_b = (_a = this.view.state.field(lintState, false)) === null || _a === void 0 ? void 0 : _a.diagnostics) === null || _b === void 0 ? void 0 : _b.size)))\n                        this.view.dispatch(setDiagnostics(this.view.state, annotations));\n                }, error => { logException(this.view.state, error); });\n            }\n        }\n        update(update) {\n            if (update.docChanged) {\n                this.lintTime = Date.now() + delay;\n                if (!this.set) {\n                    this.set = true;\n                    setTimeout(this.run, delay);\n                }\n            }\n        }\n    });\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let click = (e) => {\n            e.preventDefault();\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.items.length) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= panel.top - sel.top;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += sel.bottom - panel.bottom;\n                }\n            });\n        }\n        else if (!this.items.length) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.items.length == 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction underline(color) {\n    if (typeof btoa != \"function\")\n        return \"none\";\n    let svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"3\">\n    <path d=\"m0 3 l2 -2 l1 0 l2 2 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>\n  </svg>`;\n    return `url('data:image/svg+xml;base64,${btoa(svg)}')`;\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\"\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\n\nexport { closeLintPanel, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics };\n"]},"metadata":{},"sourceType":"module"}
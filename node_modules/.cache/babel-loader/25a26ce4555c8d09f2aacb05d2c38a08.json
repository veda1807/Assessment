{"ast":null,"code":"var _jsxFileName = \"D:\\\\MSIT\\\\Practicum - iLMS\\\\AssessmentsSystem\\\\src\\\\Components\\\\Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { basicSetup, EditorState, EditorView } from '@codemirror/basic-setup'; // import { python } from '@codemirror/lang-python';\n\nimport { java } from '@codemirror/lang-java';\nimport { myTheme, myHighlightStyle } from './Style';\nimport { python } from '@codemirror/lang-python';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Editor(props) {\n  _s();\n\n  const {\n    setView,\n    language,\n    content\n  } = props;\n  const editor = useRef();\n  useEffect(() => {\n    let lang;\n\n    if (language === \"python\") {\n      lang = python();\n    } else if (language === \"java\") {\n      lang = java();\n    }\n\n    const state = EditorState.create({\n      doc: content,\n      extensions: [basicSetup, lang, myTheme, myHighlightStyle]\n    });\n    const view = new EditorView({\n      state: state,\n      parent: editor.current\n    });\n    setView(view);\n    return () => {\n      view.destroy();\n      setView(null);\n    };\n  }, [language, content, setView]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Editor, \"/l1sqielxgphS+9IwKQmhM1mq7M=\");\n\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["D:/MSIT/Practicum - iLMS/AssessmentsSystem/src/Components/Editor.js"],"names":["React","useEffect","useRef","basicSetup","EditorState","EditorView","java","myTheme","myHighlightStyle","python","Editor","props","setView","language","content","editor","lang","state","create","doc","extensions","view","parent","current","destroy"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,QAAoD,yBAApD,C,CACA;;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAAQC,OAAR,EAAiBC,gBAAjB,QAAyC,SAAzC;AACA,SAASC,MAAT,QAAuB,yBAAvB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAClC,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA;AAHE,MAIFH,KAJJ;AAMA,QAAMI,MAAM,GAAGb,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,IAAJ;;AACA,QAAIH,QAAQ,KAAK,QAAjB,EAA2B;AACvBG,MAAAA,IAAI,GAAGP,MAAM,EAAb;AACH,KAFD,MAGK,IAAII,QAAQ,KAAK,MAAjB,EAAyB;AAC1BG,MAAAA,IAAI,GAAGV,IAAI,EAAX;AACH;;AAED,UAAMW,KAAK,GAAGb,WAAW,CAACc,MAAZ,CAAmB;AAC7BC,MAAAA,GAAG,EAAEL,OADwB;AAE7BM,MAAAA,UAAU,EAAE,CACRjB,UADQ,EAERa,IAFQ,EAGRT,OAHQ,EAIRC,gBAJQ;AAFiB,KAAnB,CAAd;AAUA,UAAMa,IAAI,GAAG,IAAIhB,UAAJ,CAAe;AACxBY,MAAAA,KAAK,EAAEA,KADiB;AAExBK,MAAAA,MAAM,EAAEP,MAAM,CAACQ;AAFS,KAAf,CAAb;AAKAX,IAAAA,OAAO,CAACS,IAAD,CAAP;AAEA,WAAO,MAAM;AACTA,MAAAA,IAAI,CAACG,OAAL;AACAZ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAHD;AAIH,GA9BQ,EA8BN,CAACC,QAAD,EAAWC,OAAX,EAAoBF,OAApB,CA9BM,CAAT;AAgCA,sBACI;AAAK,IAAA,GAAG,EAAIG;AAAZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GA5CuBL,M;;KAAAA,M","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { basicSetup, EditorState, EditorView } from '@codemirror/basic-setup';\r\n// import { python } from '@codemirror/lang-python';\r\nimport { java } from '@codemirror/lang-java';\r\nimport {myTheme, myHighlightStyle } from './Style';\r\nimport { python } from '@codemirror/lang-python';\r\n\r\nexport default function Editor(props) {\r\n    const {\r\n        setView,\r\n        language,\r\n        content\r\n    } = props;\r\n    \r\n    const editor = useRef();\r\n    \r\n    useEffect(() => {\r\n        let lang;\r\n        if (language === \"python\") {\r\n            lang = python()\r\n        }\r\n        else if (language === \"java\") {\r\n            lang = java()\r\n        }\r\n\r\n        const state = EditorState.create({\r\n            doc: content,\r\n            extensions: [\r\n                basicSetup, \r\n                lang,\r\n                myTheme,\r\n                myHighlightStyle\r\n            ],\r\n        });\r\n\r\n        const view = new EditorView({\r\n            state: state,\r\n            parent: editor.current\r\n        });\r\n\r\n        setView(view);\r\n                \r\n        return () => {\r\n            view.destroy();\r\n            setView(null);\r\n        }\r\n    }, [language, content, setView])\r\n\r\n    return (\r\n        <div ref = {editor}></div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
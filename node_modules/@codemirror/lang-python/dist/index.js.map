{"version":3,"file":"index.js","sources":["../src/python.js"],"sourcesContent":["import { parser } from \"lezer-python\";\nimport { continuedIndent, indentNodeProp, foldNodeProp, foldInside, LezerLanguage, LanguageSupport } from \"@codemirror/language\";\nimport { styleTags, tags as t } from \"@codemirror/highlight\";\n/// A language provider based on the [Lezer Python\n/// parser](https://github.com/lezer-parser/python), extended with\n/// highlighting and indentation information.\nexport const pythonLanguage = LezerLanguage.define({\n    parser: parser.configure({\n        props: [\n            indentNodeProp.add({\n                Body: continuedIndent()\n            }),\n            foldNodeProp.add({\n                \"Body ArrayExpression DictionaryExpression\": foldInside\n            }),\n            styleTags({\n                \"async '*' '**' FormatConversion\": t.modifier,\n                \"for while if elif else try except finally return raise break continue with pass assert await yield\": t.controlKeyword,\n                \"in not and or is del\": t.operatorKeyword,\n                \"import from def class global nonlocal lambda\": t.definitionKeyword,\n                \"with as print\": t.keyword,\n                self: t.self,\n                Boolean: t.bool,\n                None: t.null,\n                VariableName: t.variableName,\n                \"CallExpression/VariableName\": t.function(t.variableName),\n                \"FunctionDefinition/VariableName\": t.function(t.definition(t.variableName)),\n                \"ClassDefinition/VariableName\": t.definition(t.className),\n                PropertyName: t.propertyName,\n                \"CallExpression/MemberExpression/ProperyName\": t.function(t.propertyName),\n                Comment: t.lineComment,\n                Number: t.number,\n                String: t.string,\n                FormatString: t.special(t.string),\n                UpdateOp: t.updateOperator,\n                ArithOp: t.arithmeticOperator,\n                BitOp: t.bitwiseOperator,\n                CompareOp: t.compareOperator,\n                AssignOp: t.definitionOperator,\n                Ellipsis: t.punctuation,\n                At: t.meta,\n                \"( )\": t.paren,\n                \"[ ]\": t.squareBracket,\n                \"{ }\": t.brace,\n                \".\": t.derefOperator,\n                \", ;\": t.separator\n            })\n        ],\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"'''\", '\"\"\"'] },\n        commentTokens: { line: \"#\" },\n        indentOnInput: /^\\s*[\\}\\]\\)]$/\n    }\n});\n/// Python language support.\nexport function python() {\n    return new LanguageSupport(pythonLanguage);\n}\n"],"names":["t"],"mappings":";;;;AAGA;AACA;AACA;AACY,MAAC,cAAc,GAAG,aAAa,CAAC,MAAM,CAAC;AACnD,IAAI,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC;AAC7B,QAAQ,KAAK,EAAE;AACf,YAAY,cAAc,CAAC,GAAG,CAAC;AAC/B,gBAAgB,IAAI,EAAE,eAAe,EAAE;AACvC,aAAa,CAAC;AACd,YAAY,YAAY,CAAC,GAAG,CAAC;AAC7B,gBAAgB,2CAA2C,EAAE,UAAU;AACvE,aAAa,CAAC;AACd,YAAY,SAAS,CAAC;AACtB,gBAAgB,iCAAiC,EAAEA,IAAC,CAAC,QAAQ;AAC7D,gBAAgB,oGAAoG,EAAEA,IAAC,CAAC,cAAc;AACtI,gBAAgB,sBAAsB,EAAEA,IAAC,CAAC,eAAe;AACzD,gBAAgB,8CAA8C,EAAEA,IAAC,CAAC,iBAAiB;AACnF,gBAAgB,eAAe,EAAEA,IAAC,CAAC,OAAO;AAC1C,gBAAgB,IAAI,EAAEA,IAAC,CAAC,IAAI;AAC5B,gBAAgB,OAAO,EAAEA,IAAC,CAAC,IAAI;AAC/B,gBAAgB,IAAI,EAAEA,IAAC,CAAC,IAAI;AAC5B,gBAAgB,YAAY,EAAEA,IAAC,CAAC,YAAY;AAC5C,gBAAgB,6BAA6B,EAAEA,IAAC,CAAC,QAAQ,CAACA,IAAC,CAAC,YAAY,CAAC;AACzE,gBAAgB,iCAAiC,EAAEA,IAAC,CAAC,QAAQ,CAACA,IAAC,CAAC,UAAU,CAACA,IAAC,CAAC,YAAY,CAAC,CAAC;AAC3F,gBAAgB,8BAA8B,EAAEA,IAAC,CAAC,UAAU,CAACA,IAAC,CAAC,SAAS,CAAC;AACzE,gBAAgB,YAAY,EAAEA,IAAC,CAAC,YAAY;AAC5C,gBAAgB,6CAA6C,EAAEA,IAAC,CAAC,QAAQ,CAACA,IAAC,CAAC,YAAY,CAAC;AACzF,gBAAgB,OAAO,EAAEA,IAAC,CAAC,WAAW;AACtC,gBAAgB,MAAM,EAAEA,IAAC,CAAC,MAAM;AAChC,gBAAgB,MAAM,EAAEA,IAAC,CAAC,MAAM;AAChC,gBAAgB,YAAY,EAAEA,IAAC,CAAC,OAAO,CAACA,IAAC,CAAC,MAAM,CAAC;AACjD,gBAAgB,QAAQ,EAAEA,IAAC,CAAC,cAAc;AAC1C,gBAAgB,OAAO,EAAEA,IAAC,CAAC,kBAAkB;AAC7C,gBAAgB,KAAK,EAAEA,IAAC,CAAC,eAAe;AACxC,gBAAgB,SAAS,EAAEA,IAAC,CAAC,eAAe;AAC5C,gBAAgB,QAAQ,EAAEA,IAAC,CAAC,kBAAkB;AAC9C,gBAAgB,QAAQ,EAAEA,IAAC,CAAC,WAAW;AACvC,gBAAgB,EAAE,EAAEA,IAAC,CAAC,IAAI;AAC1B,gBAAgB,KAAK,EAAEA,IAAC,CAAC,KAAK;AAC9B,gBAAgB,KAAK,EAAEA,IAAC,CAAC,aAAa;AACtC,gBAAgB,KAAK,EAAEA,IAAC,CAAC,KAAK;AAC9B,gBAAgB,GAAG,EAAEA,IAAC,CAAC,aAAa;AACpC,gBAAgB,KAAK,EAAEA,IAAC,CAAC,SAAS;AAClC,aAAa,CAAC;AACd,SAAS;AACT,KAAK,CAAC;AACN,IAAI,YAAY,EAAE;AAClB,QAAQ,aAAa,EAAE,EAAE,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE;AAC5E,QAAQ,aAAa,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE;AACpC,QAAQ,aAAa,EAAE,eAAe;AACtC,KAAK;AACL,CAAC,EAAE;AACH;AACO,SAAS,MAAM,GAAG;AACzB,IAAI,OAAO,IAAI,eAAe,CAAC,cAAc,CAAC,CAAC;AAC/C;;;;"}
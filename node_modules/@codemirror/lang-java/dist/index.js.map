{"version":3,"file":"index.js","sources":["../src/java.js"],"sourcesContent":["import { parser } from \"lezer-java\";\nimport { flatIndent, continuedIndent, indentNodeProp, foldNodeProp, foldInside, LezerLanguage, LanguageSupport } from \"@codemirror/language\";\nimport { styleTags, tags as t } from \"@codemirror/highlight\";\n/// A language provider based on the [Lezer Java\n/// parser](https://github.com/lezer-parser/java), extended with\n/// highlighting and indentation information.\nexport const javaLanguage = LezerLanguage.define({\n    parser: parser.configure({\n        props: [\n            indentNodeProp.add({\n                IfStatement: continuedIndent({ except: /^\\s*({|else\\b)/ }),\n                TryStatement: continuedIndent({ except: /^\\s*({|catch|finally)\\b/ }),\n                LabeledStatement: flatIndent,\n                SwitchBlock: context => {\n                    let after = context.textAfter, closed = /^\\s*\\}/.test(after), isCase = /^\\s*(case|default)\\b/.test(after);\n                    return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;\n                },\n                BlockComment: () => -1,\n                Statement: continuedIndent({ except: /^{/ })\n            }),\n            foldNodeProp.add({\n                [\"Block SwitchBlock ClassBody ElementValueArrayInitializer ModuleBody EnumBody \" +\n                    \"ConstructorBody InterfaceBody ArrayInitializer\"]: foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            }),\n            styleTags({\n                null: t.null,\n                instanceof: t.operatorKeyword,\n                this: t.self,\n                \"new super assert open to with void\": t.keyword,\n                \"class interface extends implements module package import enum\": t.definitionKeyword,\n                \"switch while for if else case default do break continue return try catch finally throw\": t.controlKeyword,\n                [\"requires exports opens uses provides public private protected static transitive abstract final \" +\n                    \"strictfp synchronized native transient volatile throws\"]: t.modifier,\n                IntegerLiteral: t.integer,\n                FloatLiteral: t.float,\n                StringLiteral: t.string,\n                CharacterLiteral: t.character,\n                LineComment: t.lineComment,\n                BlockComment: t.blockComment,\n                BooleanLiteral: t.bool,\n                PrimitiveType: t.standard(t.typeName),\n                TypeName: t.typeName,\n                Identifier: t.variableName,\n                \"MethodName/Identifier\": t.function(t.variableName),\n                Definition: t.definition(t.variableName),\n                ArithOp: t.arithmeticOperator,\n                LogicOp: t.logicOperator,\n                BitOp: t.bitwiseOperator,\n                CompareOp: t.compareOperator,\n                AssignOp: t.definitionOperator,\n                UpdateOp: t.updateOperator,\n                Asterisk: t.punctuation,\n                Label: t.labelName,\n                \"( )\": t.paren,\n                \"[ ]\": t.squareBracket,\n                \"{ }\": t.brace,\n                \".\": t.derefOperator,\n                \", ;\": t.separator\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*(?:case |default:|\\{|\\})$/\n    }\n});\n/// Java language support.\nexport function java() {\n    return new LanguageSupport(javaLanguage);\n}\n"],"names":["t"],"mappings":"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"}